[{"C:\\Users\\IT09\\Music\\pms\\frontend\\src\\index.js":"1","C:\\Users\\IT09\\Music\\pms\\frontend\\src\\App.js":"2","C:\\Users\\IT09\\Music\\pms\\frontend\\src\\app\\store.js":"3","C:\\Users\\IT09\\Music\\pms\\frontend\\src\\pages\\Dashboard.jsx":"4","C:\\Users\\IT09\\Music\\pms\\frontend\\src\\pages\\Projects.jsx":"5","C:\\Users\\IT09\\Music\\pms\\frontend\\src\\pages\\ProjectStatus.jsx":"6","C:\\Users\\IT09\\Music\\pms\\frontend\\src\\pages\\AllNotification.jsx":"7","C:\\Users\\IT09\\Music\\pms\\frontend\\src\\pages\\NewProjects.jsx":"8","C:\\Users\\IT09\\Music\\pms\\frontend\\src\\pages\\ProjectDetail.jsx":"9","C:\\Users\\IT09\\Music\\pms\\frontend\\src\\pages\\MyTasks.jsx":"10","C:\\Users\\IT09\\Music\\pms\\frontend\\src\\pages\\UsersData.jsx":"11","C:\\Users\\IT09\\Music\\pms\\frontend\\src\\pages\\AllTask.jsx":"12","C:\\Users\\IT09\\Music\\pms\\frontend\\src\\components\\Login.jsx":"13","C:\\Users\\IT09\\Music\\pms\\frontend\\src\\features\\authSlice.jsx":"14","C:\\Users\\IT09\\Music\\pms\\frontend\\src\\pages\\Layout.jsx":"15","C:\\Users\\IT09\\Music\\pms\\frontend\\src\\components\\Project.jsx":"16","C:\\Users\\IT09\\Music\\pms\\frontend\\src\\components\\AllNotif.jsx":"17","C:\\Users\\IT09\\Music\\pms\\frontend\\src\\components\\MyTask.jsx":"18","C:\\Users\\IT09\\Music\\pms\\frontend\\src\\components\\Home.jsx":"19","C:\\Users\\IT09\\Music\\pms\\frontend\\src\\components\\ProjectNew.jsx":"20","C:\\Users\\IT09\\Music\\pms\\frontend\\src\\components\\ProjectStat.jsx":"21","C:\\Users\\IT09\\Music\\pms\\frontend\\src\\components\\DetailProjects.jsx":"22","C:\\Users\\IT09\\Music\\pms\\frontend\\src\\components\\Task.jsx":"23","C:\\Users\\IT09\\Music\\pms\\frontend\\src\\components\\admin\\Users.jsx":"24","C:\\Users\\IT09\\Music\\pms\\frontend\\src\\components\\admin\\ProjectAdmin.jsx":"25","C:\\Users\\IT09\\Music\\pms\\frontend\\src\\components\\admin\\ProjectStat.jsx":"26","C:\\Users\\IT09\\Music\\pms\\frontend\\src\\components\\ChangeTitle.jsx":"27","C:\\Users\\IT09\\Music\\pms\\frontend\\src\\components\\Navbar.jsx":"28","C:\\Users\\IT09\\Music\\pms\\frontend\\src\\components\\Sidebar.jsx":"29","C:\\Users\\IT09\\Music\\pms\\frontend\\src\\components\\Loader.jsx":"30","C:\\Users\\IT09\\Music\\pms\\frontend\\src\\components\\Footer.jsx":"31","C:\\Users\\IT09\\Music\\pms\\frontend\\src\\components\\SidebarAdmin.jsx":"32","C:\\Users\\IT09\\Music\\pms\\frontend\\src\\components\\Logout.jsx":"33","C:\\Users\\IT09\\Music\\pms\\frontend\\src\\components\\SubTask.jsx":"34","C:\\Users\\IT09\\Music\\pms\\frontend\\src\\components\\Notification.jsx":"35","C:\\Users\\IT09\\Music\\pms\\frontend\\src\\pages\\TaskDetail.jsx":"36","C:\\Users\\IT09\\Music\\pms\\frontend\\src\\components\\TaskDetails.jsx":"37","C:\\Users\\IT09\\Music\\pms\\frontend\\src\\pages\\Convert.jsx":"38","C:\\Users\\IT09\\Music\\pms\\frontend\\src\\components\\tool\\ConvertCSVToXLSX.jsx":"39","C:\\Users\\IT09\\Music\\pms\\frontend\\src\\pages\\ToolsLayout.jsx":"40","C:\\Users\\IT09\\Music\\pms\\frontend\\src\\components\\tool\\ToolsSidebar.jsx":"41","C:\\Users\\IT09\\Music\\pms\\frontend\\src\\pages\\SearchProjects.jsx":"42","C:\\Users\\IT09\\Music\\pms\\frontend\\src\\components\\ProjectSearch.jsx":"43"},{"size":492,"mtime":1671070626320,"results":"44","hashOfConfig":"45"},{"size":1647,"mtime":1671521494762,"results":"46","hashOfConfig":"45"},{"size":183,"mtime":1671070626342,"results":"47","hashOfConfig":"45"},{"size":732,"mtime":1671070626707,"results":"48","hashOfConfig":"45"},{"size":905,"mtime":1671070626653,"results":"49","hashOfConfig":"45"},{"size":930,"mtime":1671070626650,"results":"50","hashOfConfig":"45"},{"size":756,"mtime":1671070626725,"results":"51","hashOfConfig":"45"},{"size":754,"mtime":1671087975831,"results":"52","hashOfConfig":"45"},{"size":772,"mtime":1671070626671,"results":"53","hashOfConfig":"45"},{"size":734,"mtime":1671070626688,"results":"54","hashOfConfig":"45"},{"size":740,"mtime":1671070626631,"results":"55","hashOfConfig":"45"},{"size":728,"mtime":1671070626713,"results":"56","hashOfConfig":"45"},{"size":3209,"mtime":1671070626477,"results":"57","hashOfConfig":"45"},{"size":2518,"mtime":1671070626620,"results":"58","hashOfConfig":"45"},{"size":1132,"mtime":1671070626695,"results":"59","hashOfConfig":"45"},{"size":3739,"mtime":1671070626431,"results":"60","hashOfConfig":"45"},{"size":3963,"mtime":1671070626539,"results":"61","hashOfConfig":"45"},{"size":1743,"mtime":1671070626460,"results":"62","hashOfConfig":"45"},{"size":8089,"mtime":1671518893259,"results":"63","hashOfConfig":"45"},{"size":14310,"mtime":1671070626414,"results":"64","hashOfConfig":"45"},{"size":3896,"mtime":1671070626412,"results":"65","hashOfConfig":"45"},{"size":22062,"mtime":1671077659128,"results":"66","hashOfConfig":"45"},{"size":3874,"mtime":1671070626353,"results":"67","hashOfConfig":"45"},{"size":7669,"mtime":1671070626548,"results":"68","hashOfConfig":"45"},{"size":3530,"mtime":1671070626567,"results":"69","hashOfConfig":"45"},{"size":3695,"mtime":1671070626559,"results":"70","hashOfConfig":"45"},{"size":285,"mtime":1671070626524,"results":"71","hashOfConfig":"45"},{"size":8978,"mtime":1671521145558,"results":"72","hashOfConfig":"45"},{"size":3662,"mtime":1671070626393,"results":"73","hashOfConfig":"45"},{"size":239,"mtime":1671070626489,"results":"74","hashOfConfig":"45"},{"size":367,"mtime":1671070626505,"results":"75","hashOfConfig":"45"},{"size":4929,"mtime":1671070626389,"results":"76","hashOfConfig":"45"},{"size":1433,"mtime":1671070626475,"results":"77","hashOfConfig":"45"},{"size":835,"mtime":1671070626371,"results":"78","hashOfConfig":"45"},{"size":1840,"mtime":1671070626438,"results":"79","hashOfConfig":"45"},{"size":822,"mtime":1671072494852,"results":"80","hashOfConfig":"45"},{"size":4651,"mtime":1671086930265,"results":"81","hashOfConfig":"45"},{"size":296,"mtime":1671436742640,"results":"82","hashOfConfig":"45"},{"size":1216,"mtime":1671440133362,"results":"83","hashOfConfig":"45"},{"size":1020,"mtime":1671436707999,"results":"84","hashOfConfig":"45"},{"size":2426,"mtime":1671436649630,"results":"85","hashOfConfig":"45"},{"size":837,"mtime":1671521645761,"results":"86","hashOfConfig":"45"},{"size":3135,"mtime":1671522898676,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},"9aktai",{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"91"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"91"},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149"},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"91"},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"91"},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"91"},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"91"},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"91"},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"91"},{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"91"},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184"},{"filePath":"185","messages":"186","suppressedMessages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"191","messages":"192","suppressedMessages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"194","messages":"195","suppressedMessages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"197","messages":"198","suppressedMessages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"91"},{"filePath":"201","messages":"202","suppressedMessages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"91"},{"filePath":"205","messages":"206","suppressedMessages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"208","messages":"209","suppressedMessages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"91"},{"filePath":"212","messages":"213","suppressedMessages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"91"},{"filePath":"216","messages":"217","suppressedMessages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"91"},{"filePath":"220","messages":"221","suppressedMessages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"91"},{"filePath":"224","messages":"225","suppressedMessages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"227","messages":"228","suppressedMessages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"230","messages":"231","suppressedMessages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233"},{"filePath":"234","messages":"235","suppressedMessages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237"},"C:\\Users\\IT09\\Music\\pms\\frontend\\src\\index.js",[],[],[],"C:\\Users\\IT09\\Music\\pms\\frontend\\src\\App.js",["238"],[],"/**\n * @author Rido Martupa Simbolon\n */\n\nimport {HashRouter, BrowserRouter, Routes, Route} from \"react-router-dom\";\nimport Dashboard from './pages/Dashboard';\nimport Login from './components/Login';\nimport Projects from \"./pages/Projects\";\nimport SearchProjects from \"./pages/SearchProjects\";\nimport AllNotification from \"./pages/AllNotification\";\nimport NewProjects from \"./pages/NewProjects\";\nimport ProjectStatus from \"./pages/ProjectStatus\";\nimport ProjectDetail from \"./pages/ProjectDetail\";\nimport UsersData from \"./pages/UsersData\";\nimport AllTask from \"./pages/AllTask\";\nimport MyTasks from \"./pages/MyTasks\";\nimport TaskDetail from \"./pages/TaskDetail\";\nimport Convert from \"./pages/Convert\";\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Routes>\n        <Route path=\"/\" element={<Login/>} />\n        <Route path=\"/dashboard\" element={<Dashboard/>} />\n        <Route path=\"/notification\" element={<AllNotification/>} />\n        <Route path=\"/projects\" element={<Projects/>} />\n        <Route path=\"/projects/search/:keyword\" element={<SearchProjects/>} />\n        <Route path=\"/projects/new\" element={<NewProjects/>} />\n        <Route path=\"/projects/detail/:projectid\" element={<ProjectDetail/>} />\n        <Route path=\"/projects/:status\" element={<ProjectStatus/>} />\n        <Route path=\"/users\" element={<UsersData/>} />\n        <Route path=\"/tasks\" element={<AllTask/>} />\n        <Route path=\"/task/details/:taskid\" element={<TaskDetail/>} />\n        <Route path=\"/mytasks\" element={<MyTasks/>} />\n        <Route path=\"/tools/csvtoxlsx\" element={<Convert/>} />\n      </Routes>\n    </HashRouter>\n  );\n}\n\nexport default App;\n\n","C:\\Users\\IT09\\Music\\pms\\frontend\\src\\app\\store.js",[],[],"C:\\Users\\IT09\\Music\\pms\\frontend\\src\\pages\\Dashboard.jsx",[],[],"C:\\Users\\IT09\\Music\\pms\\frontend\\src\\pages\\Projects.jsx",[],[],"C:\\Users\\IT09\\Music\\pms\\frontend\\src\\pages\\ProjectStatus.jsx",[],[],"C:\\Users\\IT09\\Music\\pms\\frontend\\src\\pages\\AllNotification.jsx",[],[],"C:\\Users\\IT09\\Music\\pms\\frontend\\src\\pages\\NewProjects.jsx",[],[],"C:\\Users\\IT09\\Music\\pms\\frontend\\src\\pages\\ProjectDetail.jsx",[],[],"C:\\Users\\IT09\\Music\\pms\\frontend\\src\\pages\\MyTasks.jsx",[],[],"C:\\Users\\IT09\\Music\\pms\\frontend\\src\\pages\\UsersData.jsx",[],[],"C:\\Users\\IT09\\Music\\pms\\frontend\\src\\pages\\AllTask.jsx",[],[],"C:\\Users\\IT09\\Music\\pms\\frontend\\src\\components\\Login.jsx",[],[],"C:\\Users\\IT09\\Music\\pms\\frontend\\src\\features\\authSlice.jsx",[],[],"C:\\Users\\IT09\\Music\\pms\\frontend\\src\\pages\\Layout.jsx",[],[],"C:\\Users\\IT09\\Music\\pms\\frontend\\src\\components\\Project.jsx",["239","240","241"],[],"/**\r\n * @author Rido Martupa Simbolon\r\n */\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport axios from \"axios\";\r\nimport Moment from 'moment';\r\nimport '../css/project.css';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst Project = () => {\r\n  const [projects, setProjects] = useState([]);\r\n  const {user} = useSelector((state) => state.auth);\r\n  let role = '';\r\n  let uid = '';\r\n  \r\n  if(user !== null){\r\n    role = user.role;\r\n    uid = user.id;\r\n  }\r\n\r\n  const getProjects = async () => {\r\n    let url='';\r\n    role === 'admin' ? url=`${process.env.REACT_APP_API_URL}/allprojects` : url=`${process.env.REACT_APP_API_URL}/allprojects`;\r\n    const response = await axios.get(url);\r\n    setProjects(response.data);\r\n  };\r\n  \r\n  useEffect(() => {\r\n    getProjects();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container-fluid mt-4\">\r\n      {/* Page Heading */}\r\n      <div className=\"d-sm-flex align-items-center justify-content-between mb-2\">\r\n        <h1 className=\"h3 mb-3 text-gray-800\">All Projects</h1>\r\n        <nav aria-label=\"breadcrumb\">\r\n          <ol className=\"breadcrumb\">\r\n            <li className=\"breadcrumb-item\"><NavLink href=\"/dashboard\">Dashboard</NavLink></li>\r\n            <li className=\"breadcrumb-item active\" aria-current=\"page\">Project</li>\r\n          </ol>\r\n        </nav>\r\n      </div>\r\n      <div className=\"card card-body\">\r\n        <div className=\"my-1\">\r\n          <Link to={'/projects/new'} className=\"d-sm-inline-block btn btn-sm btn-primary shadow-sm mb-3\"><i className=\"fas fa-plus-square fa-sm text-white-50\" /> Create New Project</Link>\r\n        </div>\r\n        <table className=\"table table-bordered\">\r\n          <thead>\r\n            <tr className=\"text-center\">\r\n              <th scope=\"col\">PID</th>\r\n              <th scope=\"col\">Project Name</th>\r\n              <th scope=\"col\">Participant</th>\r\n              <th scope=\"col\">Progress</th>\r\n\t\t\t  <th scope=\"col\">Periode</th>\r\n              <th scope=\"col\">Start Date</th>\r\n              <th scope=\"col\">Due Date</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n\r\n          {projects.map((project, index) => (\r\n            JSON.parse(project.pic).data.map((item,idx) => {\r\n              if (item.value == uid) {\r\n              return  <tr key={index}>\r\n                  <td className=\"text-center\">{project.projectid}</td>\r\n                  <td className=\"text-bold\">\r\n                    <Link className=\"text-lead toltip\" to={`/projects/detail/${project.projectid}`}>{project.projectname}\r\n                      <small className=\"tooltiptext\">click for detail task</small>\r\n                    </Link>\r\n                  </td>\r\n                  <td className=\"text-center\" >\r\n                    {JSON.parse(project.pic).data.map((item,idx) => {\r\n                      return ((idx+1) +'.'+ item.label + `\\n`)\r\n                    })}\r\n                  </td>\r\n                  <td>\r\n                    <div className=\"progress\">\r\n                      <div className=\"progress-bar bg-info\" role=\"progressbar\" style={{width: project.ttlbobot+'%'}} aria-valuenow={project.ttlbobot} aria-valuemin={0} aria-valuemax={100}>{project.ttlbobot}%</div>\r\n                    </div>\r\n                  </td>\r\n                  <td className=\"text-center\">{Moment(project.startproj).format('YYYY')}</td>\r\n\t\t\t\t  <td className=\"text-center\">{Moment(project.startproj).format('DD-MM-YYYY')}</td>\r\n                  <td className=\"text-center\">{Moment(project.endproj).format('DD-MM-YYYY')}</td>\r\n                </tr>\r\n              }\r\n            })\r\n          ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Project;\r\n","C:\\Users\\IT09\\Music\\pms\\frontend\\src\\components\\AllNotif.jsx",["242"],[],"import React, { useState, useEffect } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport axios from \"axios\";\r\nimport Moment from 'moment';\r\nimport Loader from './Loader';\r\nimport DataTable from 'react-data-table-component';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\nconst AllNotif = () => {\r\n  const [pending, setPending] = useState(true);\r\n\tconst [data, setData] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  const { user } = useSelector((state) => state.auth);\r\n  let uuid = '';\r\n  \r\n  if(user !== null){\r\n    uuid = user.uuid;\r\n  }\r\n\r\n  const columns = [\r\n      {\r\n        name: 'ID',\r\n        selector: row => row.kd,\r\n        sortable: true\r\n      },\r\n      {\r\n        name: 'FROM',\r\n        selector: row => row.name,\r\n        sortable: true\r\n      },\r\n      {\r\n        name: 'DESCRIPTION',\r\n        selector: row => row.description,\r\n        sortable: true,\r\n        wrap: true\r\n      },\r\n      {\r\n        name: 'TYPE',\r\n        selector: row => row.trxtype,\r\n        sortable: true\r\n      },\r\n      {\r\n        name: 'STATUS',\r\n        selector: row => row.read_status,\r\n        sortable: true\r\n      },\r\n      {\r\n        name: 'DATE',\r\n        selector: row => row.createdAt,\r\n        sortable: true\r\n      }\r\n    ];\r\n\r\n  const getNotif = async () => {\r\n    setData([]);\r\n    try {\r\n      const response = await axios.get(`${process.env.REACT_APP_API_URL}/notif/${uuid}`);\r\n      response.data.forEach((items,idx) => {\r\n        let dataRow = { \r\n          id: idx,\r\n          kd: <Link key={idx} to={''} onClick={() => handleNotifClick(items.foreignid,items.id)}>{items.id}</Link>, \r\n          name: items.name, \r\n          description: items.description, \r\n          trxtype: items.trxtype.toUpperCase(), \r\n          read_status: items.read_status ? 'Read' : 'Unread', \r\n          createdAt: Moment(items.createdAt).format('DD-MM-YYYY HH:mm') \r\n        };\r\n        setData(oldArray => [...oldArray,dataRow]);\r\n      });\r\n    } catch (error) {\r\n      toast.error(<small>Gagal reload data notif! msg: {error}</small>, {\r\n        theme: \"colored\"\r\n      });\r\n      setTimeout(() => {\r\n        window.location.reload();\r\n      }, 2000);\r\n    }\r\n  };  \r\n\r\n\tuseEffect(() => {\r\n\t\tconst timeout = setTimeout(() => {\r\n\t\t\tgetNotif();\r\n\t\t\tsetPending(false);\r\n\t\t}, 2000);\r\n\t\treturn () => clearTimeout(timeout);\r\n\t}, []);\r\n\r\n  const handleNotifClick = async(fid,id) => {\r\n    try {\r\n      await axios.patch(`${process.env.REACT_APP_API_URL}/notif/update/${id}`);\r\n\r\n      setTimeout(() => {\r\n        navigate(`../projects/detail/${fid}`);\r\n      }, 1000);\r\n    } catch (error) {\r\n      toast.error(<small>Gagal update data notif! msg: {error}</small>, {\r\n        theme: \"colored\"\r\n      });\r\n      setTimeout(() => {\r\n        window.location.reload();\r\n      }, 2000);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container-fluid mt-4\">\r\n      {/* Page Heading */}\r\n      <div className=\"d-sm-flex align-items-center justify-content-between mb-2\">\r\n        <h1 className=\"h3 mb-3 text-gray-800\">All Notification Project</h1>\r\n        <nav aria-label=\"breadcrumb\">\r\n          <ol className=\"breadcrumb\">\r\n            <li className=\"breadcrumb-item\"><a href=\"/dashboard\">Dashboard</a></li>\r\n            <li className=\"breadcrumb-item active\" aria-current=\"page\">Notification</li>\r\n          </ol>\r\n        </nav>\r\n      </div>\r\n      \r\n      <div className=\"card shadow mb-4\">\r\n        <div className=\"card-body\">\r\n          <div className=\"table-responsive\">\r\n\r\n          <DataTable\r\n            title=\"Notification List\"\r\n            columns={columns}\r\n            data={data}\r\n            progressPending={pending}\r\n            progressComponent={<Loader />}\r\n            pagination\r\n          />\r\n        \r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <ToastContainer icon={false} autoClose={3000}/>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AllNotif;\r\n","C:\\Users\\IT09\\Music\\pms\\frontend\\src\\components\\MyTask.jsx",[],[],"C:\\Users\\IT09\\Music\\pms\\frontend\\src\\components\\Home.jsx",["243","244"],[],"/**\r\n * @author Rido Martupa Simbolon\r\n */\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from \"axios\";\r\nimport { useSelector } from 'react-redux';\r\nimport Moment from 'moment';\r\n\r\nconst Home = () => {\r\n  const [project, setProject] = useState([]);\r\n  const [newestTask, setNewestTask] = useState([]);\r\n  const [all_pn, setAllpn] = useState(\"\");\r\n  const [open_pn, setOpenpn] = useState(\"\");\r\n  const [closed_pn, setClosedpn] = useState(\"\");\r\n  const [canceled_pn, setCancelpn] = useState(\"\");\r\n  const {user} = useSelector((state) => state.auth);\r\n\r\n  let uuid = '';\r\n \r\n  if(user !== null){\r\n    uuid = user.uuid;\r\n  }\r\n\r\n  const bg = ['progress-bar bg-info','progress-bar bg-danger','progress-bar bg-warning','progress-bar bg-primary','progress-bar bg-success'];\r\n\r\n  const getProjectNum = async () => {\r\n    const response = await axios.get(`${process.env.REACT_APP_API_URL}/getprojectnum`);\r\n    setAllpn(response.data.all_pn[0].proj_num);\r\n    setOpenpn(response.data.open_pn[0].proj_num);\r\n    setClosedpn(response.data.closed_pn[0].proj_num);\r\n    setCancelpn(response.data.cancel_pn[0].proj_num);\r\n  };\r\n  \r\n  const getNewestProject = async () => {\r\n    const response = await axios.get(`${process.env.REACT_APP_API_URL}/newestproject`);\r\n    setProject(response.data);\r\n  };\r\n  \r\n  const getNewestTask = async () => {\r\n    const response = await axios.get(`${process.env.REACT_APP_API_URL}/dbtasks/${user && user.uuid}`);\r\n    setNewestTask(response.data);\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    getProjectNum();\r\n    getNewestProject();\r\n    getNewestTask();\r\n  }, [newestTask]);\r\n\r\n\r\n  return (\r\n    <div className=\"container-fluid mt-4\">\r\n      {/* Page Heading */}\r\n      <div className=\"d-sm-flex align-items-center justify-content-between mb-2\">\r\n        <h1 className=\"h3 mb-3 text-gray-800\">Dashboard</h1>\r\n        <Link to={'/projects/new'} className=\"d-sm-inline-block btn btn-sm btn-primary shadow-sm mb-3\"><i className=\"fas fa-plus-square fa-sm text-white-50\" /> Create New Project</Link>\r\n      </div>\r\n\r\n      {/* Content Row */}\r\n      <div className=\"row\">\r\n        {/* Earnings (Monthly) Card Example */}\r\n        <div className=\"col-xl-3 col-md-6 mb-4\">\r\n          <div className=\"card border-left-primary shadow h-100 py-2\">\r\n            <div className=\"card-body\">\r\n              <div className=\"row no-gutters align-items-center\">\r\n                <div className=\"col mr-2\">\r\n                  <div className=\"text-xs font-weight-bold text-primary text-uppercase mb-1\">\r\n                    Total Project</div>\r\n                  <div className=\"h5 mb-0 font-weight-bold text-gray-800\">{all_pn}</div>\r\n                </div>\r\n                <div className=\"col-auto\">\r\n                  <i className=\"fas fa-calendar fa-2x text-gray-300\" />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* Earnings (Monthly) Card Example */}\r\n        <div className=\"col-xl-3 col-md-6 mb-4\">\r\n          <div className=\"card border-left-success shadow h-100 py-2\">\r\n            <div className=\"card-body\">\r\n              <div className=\"row no-gutters align-items-center\">\r\n                <div className=\"col mr-2\">\r\n                  <div className=\"text-xs font-weight-bold text-success text-uppercase mb-1\">\r\n                    In Progress</div>\r\n                  <div className=\"h5 mb-0 font-weight-bold text-gray-800\">{open_pn}</div>\r\n                </div>\r\n                <div className=\"col-auto\">\r\n                  <i className=\"fas fa-list fa-2x text-gray-300\" />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* Earnings (Monthly) Card Example */}\r\n        <div className=\"col-xl-3 col-md-6 mb-4\">\r\n          <div className=\"card border-left-info shadow h-100 py-2\">\r\n            <div className=\"card-body\">\r\n              <div className=\"row no-gutters align-items-center\">\r\n                <div className=\"col mr-2\">\r\n                  <div className=\"text-xs font-weight-bold text-info text-uppercase mb-1\">Completed Project\r\n                  </div>\r\n                  <div className=\"row no-gutters align-items-center\">\r\n                    <div className=\"col-auto\">\r\n                      <div className=\"h5 mb-0 mr-3 font-weight-bold text-gray-800\">{closed_pn}</div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-auto\">\r\n                  <i className=\"fas fa-clipboard-list fa-2x text-gray-300\" />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* Pending Requests Card Example */}\r\n        <div className=\"col-xl-3 col-md-6 mb-4\">\r\n          <div className=\"card border-left-warning shadow h-100 py-2\">\r\n            <div className=\"card-body\">\r\n              <div className=\"row no-gutters align-items-center\">\r\n                <div className=\"col mr-2\">\r\n                  <div className=\"text-xs font-weight-bold text-warning text-uppercase mb-1\">\r\n                    Canceled Project</div>\r\n                  <div className=\"h5 mb-0 font-weight-bold text-gray-800\">{canceled_pn}</div>\r\n                </div>\r\n                <div className=\"col-auto\">\r\n                  <i className=\"fas fa-comments fa-2x text-gray-300\" />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Content Row */}\r\n      <div className=\"row\">\r\n        {/* Content Column */}\r\n        <div className=\"col-lg-6 mb-4\">\r\n          {/* Project Card Example */}\r\n          <div className=\"card shadow mb-4\">\r\n            <div className=\"card-header py-3\">\r\n              <h6 className=\"m-0 font-weight-bold text-primary\">Progress Newest Projects</h6>\r\n            </div>\r\n            <div className=\"card-body\">\r\n            \r\n            {project.map((item, index) => (\r\n              <div key={index}>\r\n                <h4 className=\"small font-weight-bold\">{item.projectname}<span className=\"float-right\">{item.ttlbobot}%</span></h4>\r\n                <div className=\"progress mb-4\">\r\n                  <div className={bg[index]} role=\"progressbar\" style={{width: item.ttlbobot+'%'}} aria-valuenow={item.ttlbobot} aria-valuemin={0} aria-valuemax={100} />\r\n                </div>\r\n              </div>\r\n            ))}\r\n\r\n            </div>\r\n            <div className=\"card-footer\">\r\n              <Link to={'/projects'}>See More Progress</Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-lg-6 mb-4\">\r\n          {/* Tiket */}\r\n          <div className=\"card shadow mb-4\">\r\n            <div className=\"card-header py-3\">\r\n              <h6 className=\"m-0 font-weight-bold text-primary\">New Tasks</h6>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <div className=\"row\">\r\n\r\n              {newestTask.map((nt, index) => (\r\n                <div key={index} className=\"col-md-6 col-sm-6\">\r\n                  <div className=\"card shadow mb-2\">\r\n                    <div className=\"card-header bg-info py-3\">\r\n                      <h6 className=\"m-0 font-weight-bold text-white\">From: {nt.name.toUpperCase()}</h6>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                      <p className=\"mb-0\"><span className=\"badge badge-primary badge-pill\">Desc</span> {nt.description}.</p>\r\n                      <span className=\"badge badge-secondary badge-pill\">{nt.trxtype}</span> <span className=\"badge badge-secondary badge-pill\">{Moment(nt.createdAt).format('DD-MM-YYYY')}</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n\r\n              </div>\r\n            </div>\r\n            <div className=\"card-footer\">\r\n              <Link to={'/tasks'} className=\"btn btn-sm btn-outline-info\">See All Tasks</Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\IT09\\Music\\pms\\frontend\\src\\components\\ProjectNew.jsx",["245"],[],"/**\r\n * @author Rido Martupa Simbolon\r\n */\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from \"axios\";\r\nimport { NavLink, useNavigate } from \"react-router-dom\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { MultiSelect } from \"react-multi-select-component\";\r\nimport Select from 'react-select'\r\nimport '../css/project.css';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst ProjectNew = () => {\r\n  const [picTaskSelected, setPicTaskSelected] = useState('');\r\n  const [selected, setSelected] = useState([]);\r\n  const [isDisabled, setIsDisabled] = useState(true);\r\n  const [projectname, setProjectname] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [bagdept, setBagdept] = useState(\"\");\r\n  const [subbagdept, setSubbagdept] = useState(\"\");\r\n  const [options, setOptions] = useState([]);\r\n  const [startproj, setStartproj] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(\"\");\r\n  const [dueDate, setDueDate] = useState(\"\");\r\n  const [endproj, setEndproj] = useState(\"\");\r\n\r\n  const {user} = useSelector((state) => state.auth);\r\n\r\n  let uuid = '';\r\n  let role = '';\r\n \r\n  if(user !== null){\r\n    uuid = user.uuid;\r\n    role = user.role;\r\n  }\r\n\r\n  const [msg, setMsg] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  \r\n  const [list, updateList] = useState([]);\r\n  const [items, setItem] = useState('');\r\n  const [bobot, setBobot] = useState('');\r\n  const [pictask, setPicTask] = useState('');\r\n  const [depts, setDept] = useState([]);\r\n  const [subdept, setSubDept] = useState([]);\r\n  \r\n  const getDataUser = async () => {\r\n    setIsDisabled(false);\r\n    setOptions([]);\r\n    const dataUser = await axios.get(`${process.env.REACT_APP_API_URL}/users`);\r\n    dataUser.data.forEach(dtUsr => {\r\n      let dataUser = { label: dtUsr.name, value: dtUsr.id, uid: dtUsr.uuid };\r\n      setOptions(oldArray => [...oldArray,dataUser]);\r\n    });\r\n  };\r\n\r\n  const getDataDept = async () => {\r\n    const dataDept = await axios.get(`${process.env.REACT_APP_API_URL}/getdept`);\r\n    setDept(dataDept.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getDataDept();\r\n  }, []);\r\n\r\n  // hitung bobot\r\n  let sum = list.reduce(function(prev, current) {\r\n    return prev + +current.bobot\r\n  }, 0);\r\n\r\n\r\n  const handleDept = async (e) => {\r\n    setBagdept(e);\r\n    const dataSubDept = await axios.get(`${process.env.REACT_APP_API_URL}/getsubdept/${e}`);\r\n    setSubDept(dataSubDept.data);\r\n  };\r\n\r\n  const handleRemoveItem = (id) => {\r\n    updateList(list.filter(item => item.task !== id));\r\n  };\r\n\r\n  const handleAddItem = (e) => {\r\n    updateList([...list, { task: items.toUpperCase(), bobot: bobot, pic: picTaskSelected, startdate: startDate, duedate: dueDate }]);\r\n    setItem(\"\");\r\n    setBobot(\"\");\r\n    setPicTask(\"\");\r\n    setStartDate(\"\");\r\n    setDueDate(\"\");\r\n  };\r\n\r\n  const saveProject = async (e) => {\r\n    let partpnt = {\"data\":[]};\r\n    e.preventDefault();\r\n    if (sum > 100) {\r\n      toast.error(<small>Gagal tambah project baru. Total bobot melebihi 100.</small>, {\r\n        theme: \"colored\"\r\n      });\r\n    } else {\r\n      selected.forEach(el => [\r\n        partpnt.data = [...partpnt.data, el]\r\n      ])\r\n      try {\r\n        const response = await axios.post(`${process.env.REACT_APP_API_URL}/projects`, {\r\n          projectname: projectname,\r\n          description: description,\r\n          bagdept: bagdept,\r\n          subbagdept: subbagdept,\r\n          participant: JSON.stringify(partpnt),\r\n          location: list,\r\n          ttlitem: list.length,\r\n          ttlbobot: 0,\r\n          startproj: startproj,\r\n          endproj: endproj,\r\n          status: 'OPEN',\r\n          inputby: role.toUpperCase(),\r\n          uid: uuid\r\n        });\r\n        if (response) {\r\n          toast.success(<small>Berhasil tambah project baru.</small>, {\r\n            theme: \"colored\"\r\n          });\r\n          setTimeout(() => {\r\n            navigate('/projects');\r\n          }, 3000);\r\n        }\r\n      } catch (error) {\r\n        if (error.response) {\r\n          setMsg(error.response.data.msg);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleChangePicTask = (selectedOption) => {\r\n    setPicTaskSelected(selectedOption);\r\n  };\r\n\r\n  return (     \r\n    <>       \r\n      <div className=\"container-fluid mt-4\">\r\n        {/* Page Heading */}\r\n        <div className=\"d-sm-flex align-items-center justify-content-between mb-2\">\r\n          <h1 className=\"h3 mb-3 text-gray-800\">New Project Page</h1>\r\n          <nav aria-label=\"breadcrumb\">\r\n            <ol className=\"breadcrumb\">\r\n              <li className=\"breadcrumb-item\"><NavLink to=\"/dashboard\">Dashboard</NavLink></li>\r\n              <li className=\"breadcrumb-item\"><NavLink to=\"/projects\">Projects</NavLink></li>\r\n              <li className=\"breadcrumb-item active\" aria-current=\"page\">New</li>\r\n            </ol>\r\n          </nav>\r\n        </div>\r\n\r\n        {/* Content Row */}\r\n        <form onSubmit={saveProject}>\r\n        <div className=\"row\">\r\n          {/* Form Project */}\r\n            <div className=\"col-lg-6 mb-4\">\r\n              <div className=\"card shadow mb-4\">\r\n                <div className=\"card-header py-3\">\r\n                  <h6 className=\"m-0 font-weight-bold text-primary\">Form New Project</h6>\r\n                  <small className=\"text-center text-warning\">{msg}</small>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"inputProjectName\">Project Name</label>\r\n                    <input \r\n                      type=\"text\" \r\n                      className=\"form-control\"\r\n                      value={projectname}\r\n                      onChange={(e) => setProjectname(e.target.value)}\r\n                      aria-describedby=\"projectName\" \r\n                      placeholder=\"Enter project name\" \r\n                      autoFocus\r\n                      required\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"inputProjectDescription\">Project Description</label>\r\n                    <textarea \r\n                      type=\"text\" \r\n                      className=\"form-control\" \r\n                      value={description}\r\n                      onChange={(e) => setDescription(e.target.value)}\r\n                      placeholder=\"Enter your project description here\" \r\n                      required\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"selectProjectTeam\">Project Participant</label>\r\n                    <div className=\"row\">\r\n                      <MultiSelect\r\n                        disabled={isDisabled}\r\n                        options={options}\r\n                        value={selected}\r\n                        onChange={setSelected}\r\n                        labelledBy={\"Select\"}\r\n                        isCreatable={true}\r\n                        className=\"col\"\r\n                      />\r\n                      <button onClick={getDataUser} className=\"btn btn-primary mr-3\">\r\n                        <i className=\"fa fa-refresh\"></i> \r\n                        Load Users\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"selectProjectOwner\">Project Owner Division</label>\r\n                    <input list=\"data_div\" className=\"form-control\" value={bagdept}\r\n                      onChange={(e) => handleDept(e.target.value)} placeholder=\"Enter department to select owner\" required/>\r\n                    <datalist id=\"data_div\">\r\n                      {depts.map((dept, index) => (\r\n                        <option key={index} value={dept.kddept}>{dept.nmdept}</option>\r\n                      ))}\r\n                    </datalist>\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"selectProjectOwner\">Project Owner Sub-Div</label>\r\n                    <input list=\"data_subdiv\" className=\"form-control\" value={subbagdept}\r\n                      onChange={(e) => setSubbagdept(e.target.value)} placeholder=\"Enter division to select owner\" required/>\r\n                    <datalist id=\"data_subdiv\">\r\n                      {subdept.map((item, index) => (\r\n                        <option key={index} value={item.kdsubdept}>{item.nmsubdept}</option>\r\n                      ))}\r\n                    </datalist>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col-lg-6 mb-4\">\r\n              <div className=\"card shadow mb-4\">\r\n                <div className=\"card-header py-3\">\r\n                  <h6 className=\"m-0 font-weight-bold text-primary\">Next Configuration</h6>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"inputProjectDueDate\">Project Due Date</label>\r\n                    <div className=\"row d-flex justify-content-lg-between align-items-center\">\r\n                      <div className=\"col-sm-5\">\r\n                        <input type=\"date\" className=\"form-control\" value={startproj} onChange={(e) => setStartproj(e.target.value)} required />\r\n                      </div>\r\n                      <div className=\"\"> S/D </div> \r\n                      <div className=\"col-sm-5\">\r\n                        <input type=\"date\" className=\"form-control\" value={endproj} onChange={(e) => setEndproj(e.target.value)} required />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"form-group pt-2\">\r\n                    <div className=\"d-flex align-items-center justify-content-between mb-3\">\r\n                      <label htmlFor=\"inputProjectDueDate\">Project Task (Total Bobot: <b>{sum}</b>)</label>\r\n                      <div>\r\n                        <button type=\"button\" className=\"btn btn-outline-success\" data-toggle=\"modal\" data-target=\"#addItemTask\"><i className=\"fas fa-plus-square\"></i> Add Task</button>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"d-flex flex-wrap align-items-center\">\r\n                      {list.map((item,index) => {\r\n                        return (\r\n                          <div key={index} task={item.task} className=\"bg-info rounded py-2 px-2 mr-2 mb-2\">\r\n                            <div className=\"d-flex align-items-center \">\r\n                              <span className=\"text-light mr-1\"><small>{index+1}.</small></span>\r\n                              <span className=\"text-light mr-2 \"><small>{item.task+' ('+item.bobot+')'}</small></span>\r\n                              <span className=\"text-light badge badge-danger\" role=\"button\" onClick={() => handleRemoveItem(item.task)}>x</span>\r\n                            </div>\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"card-footer\">\r\n                  <button type=\"submit\" className=\"btn btn-sm btn-primary\" > Submit</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n\r\n      <ToastContainer icon={false} autoClose={3000}/>\r\n      \r\n      {/* Modal Add Item Task */}\r\n      <div className=\"modal fade\" id=\"addItemTask\" tabIndex={-1} role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n        <div className=\"modal-dialog\" role=\"document\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h5 className=\"modal-title\" id=\"itemTaskModalLabel\">New Task Item</h5>\r\n              <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                <span aria-hidden=\"true\">x</span>\r\n              </button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <div className=\"form-group mb-3\">\r\n                <label>Task Desc - Bobot</label><br />\r\n                <div className=\"input-group\">\r\n                  <input id=\"nit\" type=\"text\" className=\"form-control\" placeholder=\"new item task...\" value={items} onChange={(e) => setItem(e.target.value)}/>\r\n                  <input id=\"bobot\" type=\"number\" step={1} className=\"form-control\" placeholder=\"bobot\" value={bobot} onChange={(e) => setBobot(e.target.value)} />\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group my-2\">\r\n                <label>Start Date - Due Date Task</label><br />\r\n                <div className=\"input-group\">\r\n                  <input type=\"date\" className=\"form-control\" value={startDate} onChange={(e) => setStartDate(e.target.value)} placeholder=\"start date\"/>\r\n                  <input type=\"date\" className=\"form-control\" value={dueDate} onChange={(e) => setDueDate(e.target.value)} placeholder=\"due date\"/>\r\n                </div>\r\n              </div>\r\n              <div className=\"input-group my-1\">\r\n                <label>Task PIC</label><br />\r\n                <div className=\"input-group\">\r\n                  <Select \r\n                    options={options} \r\n                    value={picTaskSelected}\r\n                    onChange={handleChangePicTask}\r\n                  />\r\n                  <button onClick={getDataUser} className=\"btn btn-info ml-2\">\r\n                    <i className=\"fa fa-refresh\"></i> \r\n                    Load Users\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              <div className=\"input-group my-3\">\r\n                <button className=\"btn btn-primary\" onClick={handleAddItem} data-dismiss=\"modal\"><i className=\"fa fa-plus-square\"></i> Add Item</button>\r\n              </div>\r\n              <small className=\"text-danger\">NB: item task baru harus berbeda dari yang lain. Bobot total task maksimal 100.</small>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* End Modal Add Item Task */}\r\n      \r\n    </>\r\n  );\r\n}\r\n\r\nexport default ProjectNew;\r\n","C:\\Users\\IT09\\Music\\pms\\frontend\\src\\components\\ProjectStat.jsx",["246","247","248","249"],[],"/**\r\n * @author Rido Martupa Simbolon\r\n */\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { NavLink, useParams } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from \"axios\";\r\nimport Moment from 'moment';\r\nimport '../css/project.css';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst Project = () => {\r\n  const { status } = useParams();  \r\n  const {user} = useSelector((state) => state.auth);\r\n  const [projects, setProjects] = useState([]);\r\n  let role = '';\r\n  let uid = '';\r\n  \r\n  if(user !== null){\r\n    role = user.role;\r\n    uid = user.id;\r\n  }\r\n\r\n  const getProjects = async () => {\r\n    const response = await axios.get(`${process.env.REACT_APP_API_URL}/projectstat/${status.toUpperCase()}`);\r\n    setProjects(response.data);\r\n  };\r\n  \r\n  useEffect(() => {\r\n    getProjects();\r\n  }, [getProjects]);\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"container-fluid mt-4\">\r\n      {/* Page Heading */}\r\n      <div className=\"d-sm-flex align-items-center justify-content-between mb-2\">\r\n        <h1 className=\"h3 mb-3 text-gray-800\">{status.replace(/^\\w/, (c) => c.toUpperCase())} Projects</h1>\r\n        <nav aria-label=\"breadcrumb\">\r\n          <ol className=\"breadcrumb\">\r\n            <li className=\"breadcrumb-item\"><NavLink href=\"/dashboard\">Dashboard</NavLink></li>\r\n            <li className=\"breadcrumb-item\"><NavLink href=\"/projects\">Project</NavLink></li>\r\n            <li className=\"breadcrumb-item active\" aria-current=\"page\">Open</li>\r\n          </ol>\r\n        </nav>\r\n      </div>\r\n      <div className=\"card card-body\">\r\n        <div className=\"my-1\">\r\n          <Link to={'/projects/new'} className=\"d-sm-inline-block btn btn-sm btn-primary shadow-sm mb-3\"><i className=\"fas fa-plus-square fa-sm text-white-50\" /> Create New Project</Link>\r\n        </div>\r\n        <table className=\"table table-bordered\">\r\n          <thead>\r\n            <tr className=\"text-center\">\r\n              <th scope=\"col\">PID</th>\r\n              <th scope=\"col\">Project Name</th>\r\n              <th scope=\"col\">Participant</th>\r\n              <th scope=\"col\">Progress</th>\r\n\t\t\t  <th scope=\"col\">Periode</th>\r\n              <th scope=\"col\">Start Date</th>\r\n              <th scope=\"col\">Due Date</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n\r\n          {projects.map((project, index) => (\r\n            JSON.parse(project.pic).data.map((item,idx) => {\r\n              if (item.value == uid) {\r\n              return  <tr key={index}>\r\n                  <td className=\"text-center\">{project.projectid}</td>\r\n                  <td className=\"text-bold\">\r\n                    <Link className=\"text-lead toltip\" to={`/projects/detail/${project.projectid}`}>{project.projectname}\r\n                      <small className=\"tooltiptext\">click for detail task</small>\r\n                    </Link>\r\n                  </td>\r\n                  <td className=\"text-center\" >\r\n                    {JSON.parse(project.pic).data.map((item,idx) => {\r\n                      return ((idx+1) +'.'+ item.label + `\\n`)\r\n                    })}\r\n                  </td>\r\n                  <td>\r\n                    <div className=\"progress\">\r\n                      <div className=\"progress-bar bg-info\" role=\"progressbar\" style={{width: project.ttlbobot+'%'}} aria-valuenow={project.ttlbobot} aria-valuemin={0} aria-valuemax={100}>{project.ttlbobot}%</div>\r\n                    </div>\r\n                  </td>\r\n                  <td className=\"text-center\">{Moment(project.startproj).format('YYYY')}</td>\r\n\t\t\t\t  <td className=\"text-center\">{Moment(project.startproj).format('DD-MM-YYYY')}</td>\r\n                  <td className=\"text-center\">{Moment(project.endproj).format('DD-MM-YYYY')}</td>\r\n                </tr>\r\n              }\r\n            })\r\n          ))}\r\n\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Project;\r\n","C:\\Users\\IT09\\Music\\pms\\frontend\\src\\components\\DetailProjects.jsx",["250","251","252","253","254","255","256","257","258","259"],[],"/**\r\n * @author Rido Martupa Simbolon\r\n */\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Link, useNavigate, useParams } from 'react-router-dom';\r\nimport axios from \"axios\";\r\nimport SubTask from './SubTask';\r\nimport Moment from 'moment';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Swal from 'sweetalert2';\r\nimport Modal from 'react-modal';\r\nimport '../css/project.css';\r\nimport '../css/dp.css';\r\nimport { useSelector } from 'react-redux';\r\nimport Select from 'react-select'\r\n\r\nconst addSubTaskStyle = {\r\n  content: {\r\n    backgroundColor: '#fff',\r\n    minWidth: '30%',\r\n    top: '50%',\r\n    left: '50%',\r\n    right: 'auto',\r\n    bottom: 'auto',\r\n    marginRight: '-50%',\r\n    transform: 'translate(-50%, -50%)',\r\n  },\r\n}\r\n\r\nconst DetailProjects = () => {\r\n  const navigate = useNavigate();\r\n  const [picSubTaskSelected, setPicSubTaskSelected] = useState('');\r\n  const [picTaskSelected, setPicTaskSelected] = useState('');\r\n  const [startDate, setStartDate] = useState(\"\");\r\n  const [dueDate, setDueDate] = useState(\"\");\r\n  const [detailProject, setDetailProject] = useState([]);\r\n  const [project, setProject] = useState(\"\");\r\n  const [subTask, setSubTask] = useState(\"\");\r\n  const [isDisabled, setIsDisabled] = useState(true);\r\n  const [taskId, setTaskId] = useState(\"\");\r\n  const [projectId, setProjectId] = useState(\"\");\r\n  const [options, setOptions] = useState([]);\r\n  const [msg, setMsg] = useState(\"\");\r\n  const [taskDesc, setTaskDesc] = useState(\"\");\r\n  const [taskBobot, setTaskBobot] = useState(\"\");\r\n  const { projectid } = useParams();  \r\n  let uuid = '';\r\n  let userid = '';\r\n  let role = '';\r\n\r\n  const {user} = useSelector((state) => state.auth);\r\n  \r\n  if(user !== null){\r\n    uuid = user.uuid;\r\n    role = user.role;\r\n    userid = user.id;\r\n  }\r\n\r\n  const getDataUser = async () => {\r\n    setIsDisabled(false);\r\n    setOptions([]);\r\n    const dataUser = await axios.get(`${process.env.REACT_APP_API_URL}/users`);\r\n    dataUser.data.forEach(dtUsr => {\r\n      let dataUsers = { label: dtUsr.name, value: dtUsr.id };\r\n      setOptions(oldArray => [...oldArray, dataUsers]);\r\n    });\r\n  };\r\n\r\n  const [modalIsOpen, setIsOpen] = useState(false);\r\n  const [modalNewIsOpen, setNewIsOpen] = useState(false);\r\n  const openModalSubTask = (taskid) => {\r\n    setTaskId(taskid);\r\n    setIsOpen(true);\r\n  }\r\n\r\n  const openModalNewTask = (prjid) => {\r\n    setProjectId(prjid);\r\n    setNewIsOpen(true);\r\n  }\r\n\r\n  function closeModal() {\r\n    setSubTask(\"\");\r\n    setIsOpen(false);\r\n\tgetDataUser();\r\n  }\r\n\r\n  function closeNewModal() {\r\n    setTaskDesc(\"\");\r\n    setTaskBobot(\"\");\r\n    setProjectId(\"\");\r\n    setStartDate(\"\");\r\n    setDueDate(\"\");\r\n    setNewIsOpen(false);\r\n  }\r\n  \r\n  const getDetailProject = async () => {\r\n    const response = await axios.get(`${process.env.REACT_APP_API_URL}/tasks/${projectid}`);\r\n    setDetailProject(response.data);\r\n    setProject(response.data[0]);\r\n  };\r\n  \r\n  useEffect(() => {\r\n    getDetailProject();\r\n  }, []);\r\n\r\n  \r\n  const handleCloseTask = async (id) => {    \r\n    await Swal.fire({\r\n      text: 'Apakah anda yakin close Task dengan ID: '+id+'?',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Close',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const response = await axios.patch(`${process.env.REACT_APP_API_URL}/closetask/${id}`);\r\n        if (response.status === 200) {\r\n          toast.success(<small>Task berhasil di closed. Msg: {response.status} - {response.statusText}</small>, {\r\n            theme: \"colored\"\r\n          });\r\n        } else {\r\n          toast.error(<small>Task gagal di closed. Msg: {response.status} - {response.statusText}</small>, {\r\n            theme: \"colored\"\r\n          });\r\n        }\r\n        getDetailProject();\r\n      }\r\n    })\r\n  }\r\n\r\n  // delete task\r\n  const handleDeleteTask = async (taskid) => {\r\n    let response = 200;\r\n    await Swal.fire({\r\n      text: 'Apakah anda yakin delete Task dengan ID: '+taskid+'?',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Delete',\r\n    }).then(async(result) => {\r\n      if (result.isConfirmed) {\r\n        const response = await axios.delete(`${process.env.REACT_APP_API_URL}/tasks/${taskid}`);\r\n        if (response.status === 200) {\r\n          toast.success(<small>Task berhasil di dihapus. Msg: {response.status} - {response.statusText}</small>, {\r\n            theme: \"colored\"\r\n          });\r\n        } else {\r\n          toast.error(<small>Task gagal di dihapus. Msg: {response.status} - {response.statusText}</small>, {\r\n            theme: \"colored\"\r\n          });\r\n        }\r\n        getDetailProject();\r\n      }\r\n    })\r\n  }\r\n\r\n  // delete project\r\n  const handleDelete = async (idprj) => {\r\n    await Swal.fire({\r\n      text: 'Apakah anda yakin delete Project dengan ID: '+idprj+'?',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Delete',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const response = await axios.delete(`${process.env.REACT_APP_API_URL}/projects/${idprj}`);\r\n        if (response.status === 200) {\r\n          toast.success(<small>Project dengan ID: {idprj} berhasil dihapus. Msg: {response.status} - {response.statusText}</small>, {\r\n            theme: \"colored\"\r\n          });\r\n          setTimeout(() => {\r\n            navigate(\"/projects\");\r\n          }, 3000);\r\n        } else {\r\n          toast.error(<small>Project dengan ID: {idprj} gagal dihapus. Msg: {response.status} - {response.statusText}</small>, {\r\n            theme: \"colored\"\r\n          });\r\n          setTimeout(() => {\r\n            window.location.reload();\r\n          }, 3000);\r\n        }\r\n      } \r\n    })\r\n  }\r\n\r\n  // cancel project\r\n  const handleCancel = async (idprj) => {\r\n    let response = 200;\r\n    await Swal.fire({\r\n      text: 'Apakah anda yakin cancel Project dengan ID: '+idprj+'?',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Delete',\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        toast.success(<small>Project dengan ID: {idprj} berhasil di cancel. Msg: {response} - {response}</small>, {\r\n          theme: \"colored\"\r\n        });\r\n        setTimeout(() => {\r\n          window.location.reload();\r\n        }, 3000);\r\n      } \r\n    })\r\n  }\r\n\r\n  // add sub task by modal\r\n  const addNewSubTask = async(e) => {\r\n\te.preventDefault();\r\n    try {\r\n      const response = await axios.post(`${process.env.REACT_APP_API_URL}/subtasks`, {\r\n        taskid: taskId,\r\n        subtask: subTask,\r\n        pic: picSubTaskSelected.value,\r\n        pid: project && projectid,\r\n        from: uuid\r\n      });\r\n\r\n      if (response.status === 201) {\r\n        toast.success(<small>Sub Task berhasil disubmit. Msg: {response.status} - {response.statusText}</small>, {\r\n          theme: \"colored\"\r\n        });\r\n      } else {\r\n        toast.error(<small>Sub Task gagal disubmit. Msg: {response.status} - {response.statusText}</small>, {\r\n          theme: \"colored\"\r\n        });\r\n      }\r\n  \r\n      setTimeout(() => {\r\n        window.location.reload();\r\n      }, 3000);   \r\n    } catch(error){\r\n      if (error.response) {\r\n        setMsg(error.response.data.msg);\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleChangePicTask = (selectedOption) => {\r\n    setPicTaskSelected(selectedOption);\r\n  };\r\n  const handleChangePicSubTask = (selectedOption) => {\r\n    setPicSubTaskSelected(selectedOption);\r\n  };\r\n\r\n  // tambah task baru\r\n  const addNewTask = async(e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post(`${process.env.REACT_APP_API_URL}/tasks`, {\r\n        projectid: projectId,\r\n        taskdesc: taskDesc.toUpperCase(),\r\n        taskbobot: taskBobot,\r\n        startdate: startDate,\r\n        duedate: dueDate,\r\n        pic: picTaskSelected,\r\n        from: uuid\r\n      });\r\n      console.log(response);\r\n      if (response.status === 201) {\r\n        toast.success(<small>New Task berhasil disubmit. Msg: {response.status} - {response.statusText}</small>, {\r\n          theme: \"colored\"\r\n        });\r\n      } else {\r\n        toast.error(<small>New Task gagal disubmit. Msg: {response.status} - {response.statusText}</small>, {\r\n          theme: \"colored\"\r\n        });\r\n      }\r\n  \r\n      setTimeout(() => {\r\n        window.location.reload();\r\n      }, 3000); \r\n    } catch (error) {\r\n      if (error.response) {\r\n        setMsg(error.response.data.msg);\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>    \r\n      <div className=\"container-fluid mt-4\">\r\n        {/* Page Heading */}\r\n        <div className=\"d-sm-flex align-items-center justify-content-between mb-2\">\r\n          <h1 className=\"h3 mb-3 text-gray-800\">Detail Projects</h1>\r\n          <nav aria-label=\"breadcrumb\">\r\n            <ol className=\"breadcrumb\">\r\n              <li className=\"breadcrumb-item\"><a href=\"/dashboard\">Dashboard</a></li>\r\n              <li className=\"breadcrumb-item\"><a href=\"/projects\">Project</a></li>\r\n              <li className=\"breadcrumb-item active\" aria-current=\"page\">Detail</li>\r\n            </ol>\r\n          </nav>\r\n        </div>\r\n        <div className=\"card card-body\">\r\n          <div className=\"my-2\">\r\n            <div>\r\n              <div className=\"form-group row\">\r\n                <label className=\"col-sm-2 col-form-label\">Project Name</label>\r\n                <div className=\"col-sm-10\">\r\n                  <input type=\"text\" readOnly className=\"form-control\" value={project && project.projectname } />\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group row\">\r\n                <label className=\"col-sm-2 col-form-label\">Description</label>\r\n                <div className=\"col-sm-10\">\r\n                  <input type=\"text\" readOnly className=\"form-control\" value={project && project.description} />\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group row\">\r\n                <label className=\"col-sm-2 col-form-label\">Periode</label>\r\n                <div className=\"col-sm-10\">\r\n                  <input type=\"text\" readOnly className=\"form-control\" value={Moment(project && project.startproj).format('YYYY')} />\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group row\">\r\n                <label className=\"col-sm-2 col-form-label\">Owner Dept</label>\r\n                <div className=\"col-sm-10\">\r\n                  <input type=\"text\" readOnly className=\"form-control\" value={project && project.subbagdept} />\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group row\">\r\n                <label className=\"col-sm-2 col-form-label\">Participant</label>\r\n                <div className=\"col-sm-10\">\r\n                  <input type=\"text\" readOnly className=\"form-control\" \r\n                    value={\r\n                      project &&\r\n                      JSON.parse(project.partisipant).data.map((item,index) => {\r\n                        return(' '+ item.label + `\\n`)\r\n                      })\r\n                    } \r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group row\">\r\n                <label className=\"col-sm-2 col-form-label\">Status</label>\r\n                <div className=\"col-sm-10\">\r\n                  <input type=\"text\" readOnly className=\"form-control\" value={project && project.status} />\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group row\">\r\n                <label className=\"col-sm-2 col-form-label\">Action</label>\r\n                <div className=\"col-sm-10\">\r\n                  { \r\n                    role === 'admin' ?\r\n                    <>\r\n                      <button onClick={() => handleDelete(project && projectid)} disabled={(project && project.status === 'CLOSE') ? true : false} className=\"btn btn-danger shadow mr-2\">\r\n                        <i className=\"fa fa-lock mr-2\"></i>\r\n                        Delete Project\r\n                      </button>\r\n                      <button onClick={() => handleCancel(project && projectid)} disabled={(project && project.status === 'CANCEL') ? true : false} className=\"btn btn-secondary shadow mr-2\">\r\n                        <i className=\"fa fa-minus-square mr-2\"></i>\r\n                        Cancel Project\r\n                      </button>\r\n                      <button onClick={() => openModalNewTask(project && projectid)} disabled={( project && project.status === 'CLOSE') ? true : false} className=\"btn btn-primary shadow\">\r\n                        <i className=\"fa fa-plus-square mr-2\"></i>\r\n                        Add New Task \r\n                      </button>\r\n                    </>\r\n                    :\r\n                    <>\r\n                      <button onClick={() => handleCancel(project && projectid)} disabled={(project && project.status === 'CANCEL') ? true : false} className=\"btn btn-secondary shadow mr-2\">\r\n                        <i className=\"fa fa-minus-square mr-2\"></i>\r\n                        Cancel Project\r\n                      </button>\r\n                      <button onClick={() => openModalNewTask(project && projectid)} disabled={( project && project.status === 'CLOSE') ? true : false} className=\"btn btn-primary shadow\">\r\n                        <i className=\"fa fa-plus-square mr-2\"></i>\r\n                        Add New Task \r\n                      </button>\r\n                    </>\r\n                  }\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <hr/>\r\n            <h3>Tasks List</h3>\r\n          </div>\r\n          <table className=\"table table-bordered\">\r\n            <thead>\r\n              <tr className=\"text-center\">\r\n                <th scope=\"col\">#</th>\r\n                <th scope=\"col\">Task Name (Bobot)</th>\r\n                <th scope=\"col\">Sub Task (By)</th>\r\n                <th scope=\"col\">PIC</th>\r\n                <th scope=\"col\">Due Date</th>\r\n                <th scope=\"col\">Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n\r\n            {detailProject.map((task, index) => (\r\n              <tr key={task.id}>\r\n                <td className=\"text-center\">{index + 1}</td>\r\n                <td className=\"text-center\" style={{maxWidth: 90+'px'}}>\r\n                  {task.task_name+' ('+task.bobot+')'}\r\n                  <span className={task.t_status ? 'badge badge-secondary badge-pill' : 'badge badge-info badge-pill'}>\r\n                    <small className=\"text-white\">{task.t_status ? 'CLOSED' : 'OPEN'}</small>\r\n                  </span>\r\n                </td>\r\n                <td className=\"text-bold\" style={{maxWidth: 220+'px'}}>\r\n                  <SubTask taskid={task.taskid} />\r\n                </td>\r\n                <td className=\"text-center\">{task.name}</td>\r\n                <td className=\"text-center\">{Moment(task.due_date).format('DD-MM-YYYY')}</td>\r\n                \r\n                { \r\n                  role === 'admin' ?\r\n                    <td className=\"text-center\">\r\n                      <button onClick={() => openModalSubTask(task.taskid)} type=\"button\" className=\"btn btn-info btn-sm mr-1 toltip\">\r\n                        <i className=\"fa fa-plus-square mr-1\"></i>\r\n                        <span className=\"tooltiptext\">Add Sub Task</span>\r\n                      </button>\r\n                      <Link to={`/task/details/${task.taskid}`} type=\"button\" className=\"btn btn-success btn-sm mr-1 toltip\">\r\n                        <i className=\"fa fa-list mr-1\"></i>\r\n                        <span className=\"tooltiptext\">Detail Task</span>\r\n                      </Link>\r\n                      <button onClick={() => handleCloseTask(task.taskid)} type=\"button\" className=\"btn btn-warning btn-sm mr-1 toltip\">\r\n                        <i className=\"fa fa-lock mr-1\"></i>\r\n                        <span className=\"tooltiptext\">Close Task</span>\r\n                      </button>\r\n                      <button onClick={() => handleDeleteTask(task.taskid)} type=\"button\" className=\"btn btn-danger btn-sm toltip\">\r\n                        <i className=\"fa fa-trash mr-1 \"></i>\r\n                        <span className=\"tooltiptext\">Delete Task</span>\r\n                      </button>\r\n                    </td>\r\n                  :\r\n                    <td className=\"text-center\">\r\n                      <button onClick={() => openModalSubTask(task.taskid)} disabled={task.pic != `${userid}`} type=\"button\" className=\"btn btn-info btn-sm mr-1 toltip\">\r\n                        <i className=\"fa fa-plus-square mr-1\"></i>\r\n                        <span className=\"tooltiptext\">{task.pic != `${userid}` ? 'Disable Add Sub Task' : 'Add Sub Task'}</span>\r\n                      </button>\r\n                      <Link to={`/task/details/${task.taskid}`} disabled={task.pic != `${userid}`} type=\"button\" className=\"btn btn-success btn-sm mr-1 toltip\">\r\n                        <i className=\"fa fa-list mr-1\"></i>\r\n                        <span className=\"tooltiptext\">{task.pic != `${userid}` ? 'Disable Detail Task' : 'Detail Task'}</span>\r\n                      </Link>\r\n                      <button onClick={() => handleCloseTask(task.taskid)} disabled={task.pic != `${userid}`} type=\"button\" className=\"btn btn-warning btn-sm mr-1 toltip\">\r\n                        <i className=\"fa fa-lock mr-1\"></i>\r\n                        <span className=\"tooltiptext\">{task.pic != `${userid}` ? 'Disable Close Task' : 'Close Task'}</span>\r\n                      </button>\r\n                      <button onClick={() => handleDeleteTask(task.taskid)} disabled={task.pic != `${userid}`} type=\"button\" className=\"btn btn-danger btn-sm toltip\">\r\n                        <i className=\"fa fa-trash mr-1 \"></i>\r\n                        <span className=\"tooltiptext\">{task.pic != `${userid}` ? 'Disable Delete Task' : 'Delete Task'}</span>\r\n                      </button>\r\n                    </td>\r\n                }\r\n              </tr>\r\n            ))}\r\n\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n\r\n      {/* modal untuk add sub task */}\r\n      <Modal\r\n        appElement={document.getElementById('page-top')}\r\n        isOpen={modalIsOpen}\r\n        onRequestClose={closeModal}\r\n        style={addSubTaskStyle}\r\n        contentLabel=\"Add Sub Task\"\r\n      >   \r\n\r\n        <small className=\"text-center text-warning\">{msg}</small>\r\n        <form onSubmit={(e) => addNewSubTask(e)}>\r\n          <div className=\"modal-body\">\r\n            <div className=\"form-group\">\r\n              <label className=\"text-dark\">Sub Task Name</label>\r\n              <textarea className=\"form-control\" type=\"text\" placeholder=\"enter new sub task\" value={subTask} onChange={(e) => setSubTask(e.target.value)} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label className=\"text-dark\">Sub Task PIC</label>\r\n              <div className=\"input-group\">\r\n                <Select \r\n                  disabled={isDisabled}\r\n                  options={options} \r\n                  value={picSubTaskSelected}\r\n                  onChange={handleChangePicSubTask}\r\n                />\r\n                <button type='button' onClick={getDataUser} className=\"btn btn-sm btn-info ml-2\">\r\n                  <i className=\"fa fa-refresh\"></i> \r\n                  Load Users\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"modal-footer\">\r\n            <button type=\"button\" className=\"btn btn-sm btn-secondary\" onClick={closeModal}>Close</button>\r\n            <button type=\"submit\" className=\"btn btn-sm btn-primary\" >Submit</button>\r\n          </div>\r\n        </form>\r\n      </Modal>\r\n\r\n      <Modal\r\n        appElement={document.getElementById('page-top')}\r\n        isOpen={modalNewIsOpen}\r\n        onRequestClose={closeNewModal}\r\n        style={addSubTaskStyle}\r\n        contentLabel=\"Add New Task\"\r\n      >\r\n        <small className=\"text-center text-warning\">{msg}</small>\r\n        <form onSubmit={(e) => addNewTask(e)}>\r\n          <div className=\"modal-body\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"\">Task Item Description</label>\r\n              <div className=\"input-group\">\r\n                <input className=\"form-control\" type=\"text\" value={taskDesc} onChange={(e) => setTaskDesc(e.target.value)} placeholder=\"task item description\" autoFocus />\r\n                <input className=\"form-control\" type=\"text\" value={taskBobot} onChange={(e) => setTaskBobot(e.target.value)} placeholder=\"bobot task\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"\">Start Date - Due Date</label>\r\n              <div className=\"input-group\">\r\n                <input className=\"form-control\" type=\"date\" value={startDate} onChange={(e) => setStartDate(e.target.value)}/>\r\n                <input className=\"form-control\" type=\"date\" value={dueDate} onChange={(e) => setDueDate(e.target.value)} />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"\">Task PIC</label>\r\n              <div className=\"input-group\">\r\n                <Select \r\n                  disabled={isDisabled}\r\n                  options={options} \r\n                  value={picTaskSelected}\r\n                  onChange={handleChangePicTask}\r\n                />\r\n                <button type='button' onClick={getDataUser} className=\"btn btn-info ml-2\">\r\n                  <i className=\"fa fa-refresh\"></i> \r\n                  Load Users\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"modal-footer\">\r\n            <button type=\"button\" className=\"btn btn-sm btn-secondary\" onClick={closeNewModal}>Close</button>\r\n            <button type=\"submit\" className=\"btn btn-sm btn-primary\" >Submit</button>\r\n          </div>\r\n        </form>\r\n\r\n      </Modal>\r\n\r\n      <ToastContainer icon={false} autoClose={3000}/>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default DetailProjects;\r\n","C:\\Users\\IT09\\Music\\pms\\frontend\\src\\components\\Task.jsx",["260","261","262"],[],"import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Moment from 'moment';\r\nimport Loader from './Loader';\r\nimport DataTable from 'react-data-table-component';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nconst Task = () => {\r\n  const [pending, setPending] = useState(true);\r\n  const [tasks, setTasks] = useState([]);\r\n  const { user } = useSelector((state) => state.auth);\r\n  const navigate = useNavigate();\r\n\r\n  let uuid = '';\r\n  let id = '';\r\n  if(user !== null){\r\n    uuid = user.uuid;\r\n    id = user.id;\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      name: 'PROJECT',\r\n      selector: row => row.projectname,\r\n      sortable: true,\r\n      wrap: true\r\n    },\r\n    {\r\n      name: 'TASKID',\r\n      selector: row => row.taskid,\r\n      sortable: true\r\n    },\r\n    {\r\n      name: 'TASK',\r\n      selector: row => row.task_name,\r\n      sortable: true\r\n    },\r\n    {\r\n      name: 'PROGRESS',\r\n      selector: row => row.progress,\r\n      sortable: true,\r\n      wrap: true\r\n    },\r\n    {\r\n      name: 'STATUS',\r\n      selector: row => row.t_status,\r\n      sortable: true\r\n    },\r\n    {\r\n      name: 'START DATE',\r\n      selector: row => row.startdate,\r\n      sortable: true\r\n    },\r\n    {\r\n      name: 'DUE DATE',\r\n      selector: row => row.due_date,\r\n      sortable: true\r\n    }\r\n  ];\r\n  \r\n  const getAllTask = async () => {\r\n    setTasks([]);\r\n    try {\r\n      let response = await axios.get(`${process.env.REACT_APP_API_URL}/mytasks/${id}`);\r\n      response.data.forEach((items,idx) => {\r\n        let dataRow = { \r\n          id: idx,\r\n          projectname: items.projectname, \r\n          taskid: <Link to={`../projects/detail/${items.projectid}`}>{items.taskid}</Link>, \r\n          task_name: items.task_name.toUpperCase(), \r\n          progress: <div className=\"progress\">\r\n                      <div className=\"progress-bar bg-info\" role=\"progressbar\" style={{width: 100+'%'}} aria-valuenow={items.progress} aria-valuemin={0} aria-valuemax={100}>{items.progress}%</div>\r\n                    </div>, \r\n          t_status: items.t_status ? 'CLOSE' : 'OPEN', \r\n          startdate: Moment(items.startdate).format('DD-MM-YYYY HH:mm'),\r\n          due_date: Moment(items.due_date).format('DD-MM-YYYY HH:mm') \r\n        };\r\n        setTasks(oldArray => [...oldArray,dataRow]);\r\n      });\r\n    } catch (error) {\r\n      toast.error(<small>Gagal reload data task! msg: {error}</small>, {\r\n        theme: \"colored\"\r\n      });\r\n      setTimeout(() => {\r\n        window.location.reload();\r\n      }, 2000);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => {\r\n\t\t\tgetAllTask();\r\n\t\t\tsetPending(false);\r\n\t\t}, 2000);\r\n\t\treturn () => clearTimeout(timeout);\r\n  }, []);\r\n\r\n  \r\n  return (\r\n    <div className=\"container-fluid mt-4\">\r\n      {/* Page Heading */}\r\n      <div className=\"d-sm-flex align-items-center justify-content-between mb-2\">\r\n        <h1 className=\"h3 mb-3 text-gray-800\">All My Tasks</h1>\r\n        <nav aria-label=\"breadcrumb\">\r\n          <ol className=\"breadcrumb\">\r\n            <li className=\"breadcrumb-item\"><a href=\"/dashboard\">Dashboard</a></li>\r\n            <li className=\"breadcrumb-item active\" aria-current=\"page\">Task</li>\r\n          </ol>\r\n        </nav>\r\n      </div>\r\n      \r\n      <div className=\"card shadow mb-4\">\r\n        <div className=\"card-body\">\r\n          <div className=\"table-responsive\">\r\n\r\n          <DataTable\r\n            title=\"Task List\"\r\n            columns={columns}\r\n            data={tasks}\r\n            progressPending={pending}\r\n            progressComponent={<Loader />}\r\n            pagination\r\n          />\r\n        \r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <ToastContainer icon={false} autoClose={3000}/>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Task;\r\n","C:\\Users\\IT09\\Music\\pms\\frontend\\src\\components\\admin\\Users.jsx",[],[],"C:\\Users\\IT09\\Music\\pms\\frontend\\src\\components\\admin\\ProjectAdmin.jsx",["263","264"],[],"/**\r\n * @author Rido Martupa Simbolon\r\n */\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport axios from \"axios\";\r\nimport Moment from 'moment';\r\nimport '../../css/project.css';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst ProjectAdmin = () => {\r\n  const [projects, setProjects] = useState([]);\r\n  const {user} = useSelector((state) => state.auth);\r\n  let role = '';\r\n  let uid = '';\r\n  \r\n  if(user !== null){\r\n    role = user.role;\r\n    uid = user.id;\r\n  }\r\n\r\n  const getProjects = async () => {\r\n    let url='';\r\n    role === 'admin' ? url=`${process.env.REACT_APP_API_URL}/allprojects` : url=`${process.env.REACT_APP_API_URL}/allprojects`;\r\n    const response = await axios.get(url);\r\n    setProjects(response.data);\r\n  };\r\n  \r\n  useEffect(() => {\r\n    getProjects();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container-fluid mt-4\">\r\n      {/* Page Heading */}\r\n      <div className=\"d-sm-flex align-items-center justify-content-between mb-2\">\r\n        <h1 className=\"h3 mb-3 text-gray-800\">All Projects</h1>\r\n        <nav aria-label=\"breadcrumb\">\r\n          <ol className=\"breadcrumb\">\r\n            <li className=\"breadcrumb-item\"><NavLink href=\"/dashboard\">Dashboard</NavLink></li>\r\n            <li className=\"breadcrumb-item active\" aria-current=\"page\">Project</li>\r\n          </ol>\r\n        </nav>\r\n      </div>\r\n      <div className=\"card card-body\">\r\n        <div className=\"my-1\">\r\n          <Link to={'/projects/new'} className=\"d-sm-inline-block btn btn-sm btn-primary shadow-sm mb-3\"><i className=\"fas fa-plus-square fa-sm text-white-50\" /> Create New Project</Link>\r\n        </div>\r\n        <table className=\"table table-bordered\">\r\n          <thead>\r\n            <tr className=\"text-center\">\r\n              <th scope=\"col\">PID</th>\r\n              <th scope=\"col\">Project Name</th>\r\n              <th scope=\"col\">Participant</th>\r\n              <th scope=\"col\">Progress</th>\r\n\t\t\t  <th scope=\"col\">Periode</th>\r\n              <th scope=\"col\">Start Date</th>\r\n              <th scope=\"col\">Due Date</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n\r\n          {projects.map((project, index) => (\r\n            <tr key={index}>\r\n              <td className=\"text-center\">{project.projectid}</td>\r\n              <td className=\"text-bold\">\r\n                <Link className=\"text-lead toltip\" to={`/projects/detail/${project.projectid}`}>{project.projectname}\r\n                  <small className=\"tooltiptext\">click for detail task</small>\r\n                </Link>\r\n              </td>\r\n              <td className=\"text-center\" >\r\n                {JSON.parse(project.pic).data.map((item,idx) => {\r\n                  return ((idx+1) +'.'+ item.label + `\\n`)\r\n                })}\r\n              </td>\r\n              <td>\r\n                <div className=\"progress\">\r\n                  <div className=\"progress-bar bg-info\" role=\"progressbar\" style={{width: project.ttlbobot+'%'}} aria-valuenow={project.ttlbobot} aria-valuemin={0} aria-valuemax={100}>{project.ttlbobot}%</div>\r\n                </div>\r\n              </td>\r\n              <td className=\"text-center\">{Moment(project.startproj).format('YYYY')}</td>\r\n\t\t\t  <td className=\"text-center\">{Moment(project.startproj).format('DD-MM-YYYY')}</td>\r\n              <td className=\"text-center\">{Moment(project.endproj).format('DD-MM-YYYY')}</td>\r\n            </tr>\r\n          ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProjectAdmin;\r\n","C:\\Users\\IT09\\Music\\pms\\frontend\\src\\components\\admin\\ProjectStat.jsx",["265","266","267"],[],"/**\r\n * @author Rido Martupa Simbolon\r\n */\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { NavLink, useParams } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from \"axios\";\r\nimport Moment from 'moment';\r\nimport '../../css/project.css';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst ProjectStatAdmin = () => {\r\n  const { status } = useParams();  \r\n  const {user} = useSelector((state) => state.auth);\r\n  const [projects, setProjects] = useState([]);\r\n  let role = '';\r\n  let uid = '';\r\n  \r\n  if(user !== null){\r\n    role = user.role;\r\n    uid = user.id;\r\n  }\r\n\r\n  const getProjects = async () => {\r\n    const response = await axios.get(`${process.env.REACT_APP_API_URL}/projectstat/${status.toUpperCase()}`);\r\n    setProjects(response.data);\r\n  };\r\n  \r\n  useEffect(() => {\r\n    getProjects();\r\n  }, [getProjects]);\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"container-fluid mt-4\">\r\n      {/* Page Heading */}\r\n      <div className=\"d-sm-flex align-items-center justify-content-between mb-2\">\r\n        <h1 className=\"h3 mb-3 text-gray-800\">{status.replace(/^\\w/, (c) => c.toUpperCase())} Projects</h1>\r\n        <nav aria-label=\"breadcrumb\">\r\n          <ol className=\"breadcrumb\">\r\n            <li className=\"breadcrumb-item\"><NavLink href=\"/dashboard\">Dashboard</NavLink></li>\r\n            <li className=\"breadcrumb-item\"><NavLink href=\"/projects\">Project</NavLink></li>\r\n            <li className=\"breadcrumb-item active\" aria-current=\"page\">Open</li>\r\n          </ol>\r\n        </nav>\r\n      </div>\r\n      <div className=\"card card-body\">\r\n        <div className=\"my-1\">\r\n          <Link to={'/projects/new'} className=\"d-sm-inline-block btn btn-sm btn-primary shadow-sm mb-3\"><i className=\"fas fa-plus-square fa-sm text-white-50\" /> Create New Project</Link>\r\n        </div>\r\n        <table className=\"table table-bordered\">\r\n          <thead>\r\n            <tr className=\"text-center\">\r\n              <th scope=\"col\">PID</th>\r\n              <th scope=\"col\">Project Name</th>\r\n              <th scope=\"col\">Participant</th>\r\n              <th scope=\"col\">Progress</th>\r\n\t\t\t  <th scope=\"col\">Periode</th>\r\n              <th scope=\"col\">Start Date</th>\r\n              <th scope=\"col\">Due Date</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n\r\n          {projects.map((project, index) => (\r\n            <tr key={index}>\r\n              <td className=\"text-center\">{project.projectid}</td>\r\n              <td className=\"text-bold\">\r\n                <Link className=\"text-lead toltip\" to={`/projects/detail/${project.projectid}`}>{project.projectname}\r\n                  <small className=\"tooltiptext\">click for detail task</small>\r\n                </Link>\r\n              </td>\r\n              <td className=\"text-center\" >\r\n                {JSON.parse(project.pic).data.map((item,idx) => {\r\n                  return ((idx+1) +'.'+ item.label + `\\n`)\r\n                })}\r\n              </td>\r\n              <td>\r\n                <div className=\"progress\">\r\n                  <div className=\"progress-bar bg-info\" role=\"progressbar\" style={{width: project.ttlbobot+'%'}} aria-valuenow={project.ttlbobot} aria-valuemin={0} aria-valuemax={100}>{project.ttlbobot}%</div>\r\n                </div>\r\n              </td>\r\n              <td className=\"text-center\">{Moment(project.startproj).format('YYYY')}</td>\r\n\t\t\t  <td className=\"text-center\">{Moment(project.startproj).format('DD-MM-YYYY')}</td>\r\n              <td className=\"text-center\">{Moment(project.endproj).format('DD-MM-YYYY')}</td>\r\n            </tr>\r\n          ))}\r\n\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProjectStatAdmin;\r\n","C:\\Users\\IT09\\Music\\pms\\frontend\\src\\components\\ChangeTitle.jsx",["268"],[],"import React, { useEffect } from \"react\";\r\n\r\nconst ChangeTitle = ({ pageTitle }) => {\r\n  useEffect(() => {\r\n    const prevTitle = document.title;\r\n    document.title = pageTitle;\r\n    return () => {\r\n      document.title = prevTitle;\r\n    };\r\n  });\r\n\r\n};\r\n\r\nexport default ChangeTitle;","C:\\Users\\IT09\\Music\\pms\\frontend\\src\\components\\Navbar.jsx",["269","270"],[],"import React, { useState } from 'react';\r\nimport axios from \"axios\";\r\nimport { NavLink, useNavigate } from \"react-router-dom\";\r\nimport Notification from \"./Notification\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { LogOut, reset } from \"../features/authSlice\";\r\n\r\nconst Navbar = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const [searchValue, setSearchValue] = useState('');\r\n  \r\n  const {user} = useSelector((state) => state.auth);\r\n  let username = '';\r\n  \r\n  if(user !== null){\r\n    username = user.name;\r\n  }\r\n\r\n  const searchProject = async (e) => {\r\n    e.preventDefault();\r\n    navigate(`/projects/search/${searchValue}`)\r\n    // try {\r\n    //   const response = await axios.post(`${process.env.REACT_APP_API_URL}/projects/search`, {\r\n    //     keyword: searchValue\r\n    //   });\r\n    //   let listproj = response.data;\r\n    //   // console.log(response.data);\r\n    // } catch (error) {\r\n    //   console.log(error);\r\n    // }\r\n\r\n  }\r\n\r\n  const logout = () => {\r\n    dispatch(LogOut());\r\n    dispatch(reset());\r\n    navigate(\"/\");\r\n  }\r\n  return (\r\n    <div>\r\n      {/* Topbar */}\r\n      <nav className=\"navbar navbar-expand navbar-light bg-white topbar static-top shadow\">\r\n        <NavLink className=\"nav-link nav-toggler d-md-none d-lg-none\" id=\"menuDropdown\" role=\"button\" data-toggle=\"collapse\" data-target=\"#navbarToggleExternalContent\">\r\n          <i className=\"fa fa-bars\" />\r\n        </NavLink>\r\n       \r\n        {/* Topbar Search */}\r\n        <form onSubmit={searchProject} className=\"d-none d-sm-inline-block form-inline mr-auto ml-md-3 my-2 my-md-0 mw-100 navbar-search\">\r\n          <div className=\"input-group\">\r\n            <input type=\"text\" value={searchValue} onChange={(e) => setSearchValue(e.target.value)} className=\"form-control bg-light border-0 small\" placeholder=\"Search for...\" aria-label=\"Search\" aria-describedby=\"basic-addon2\" />\r\n            <div className=\"input-group-append\">\r\n              <button className=\"btn btn-info\" type=\"submit\">\r\n                <i className=\"fas fa-search fa-sm\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n\r\n        {/* Topbar Navbar */}\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          {/* Nav Item - Search Dropdown (Visible Only XS) */}\r\n          <li className=\"nav-item dropdown no-arrow d-sm-none\">\r\n            <NavLink className=\"nav-link dropdown-toggle\" id=\"searchDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n              <i className=\"fas fa-search fa-fw\" />\r\n            </NavLink>\r\n            {/* Dropdown - Messages */}\r\n            <div className=\"dropdown-menu dropdown-menu-right p-3 shadow animated--grow-in\" aria-labelledby=\"searchDropdown\">\r\n              <form className=\"form-inline mr-auto w-100 navbar-search\">\r\n                <div className=\"input-group\">\r\n                  <input type=\"text\" className=\"form-control bg-light border-0 small\" placeholder=\"Search for...\" aria-label=\"Search\" aria-describedby=\"basic-addon2\" />\r\n                  <div className=\"input-group-append\">\r\n                    <button className=\"btn btn-info\" type=\"button\">\r\n                      <i className=\"fas fa-search fa-sm\" />\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </li>\r\n\r\n          {/* Nav Item - Alerts Notification */}\r\n          <Notification />\r\n\r\n          <div className=\"topbar-divider d-none d-sm-block\" />\r\n\r\n          {/* Nav Item - User Information */}\r\n          <li className=\"nav-item dropdown no-arrow\">\r\n            <NavLink className=\"nav-link dropdown-toggle\" id=\"userDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n              <span className=\"mr-2 d-none d-lg-inline text-gray-600 small\">{username}</span>\r\n              <img className=\"img-profile rounded-circle\" src=\"/admin/img/undraw_profile.svg\" />\r\n            </NavLink>\r\n            {/* Dropdown - User Information */}\r\n            <div className=\"dropdown-menu dropdown-menu-right shadow animated--grow-in\" aria-labelledby=\"userDropdown\">\r\n              <button className=\"dropdown-item\">\r\n                <i className=\"fas fa-user fa-sm fa-fw mr-2 text-gray-400\" />\r\n                Profile\r\n              </button>\r\n              <button className=\"dropdown-item\">\r\n                <i className=\"fas fa-list fa-sm fa-fw mr-2 text-gray-400\" />\r\n                Activity Log\r\n              </button>\r\n              <div className=\"dropdown-divider\" />\r\n              <button className=\"dropdown-item\" onClick={logout} data-toggle=\"modal\" data-target=\"#logoutModal\">\r\n                <i className=\"fas fa-sign-out-alt fa-sm fa-fw mr-2 text-gray-400\" />\r\n                Logout\r\n              </button>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n\r\n      {/* Sidebar Toggle (Topbar) */}     \r\n      <div className=\"collapse\" id=\"navbarToggleExternalContent\">\r\n        <div className=\"bg-gradient-info px-4 py-3\">\r\n          <ul className=\"navbar-nav mr-auto mt-lg-0\">\r\n            <li className=\"nav-item active\">\r\n              <NavLink className=\"nav-link\" to=\"\">\r\n                <i className=\"fas fa-fw fa-tachometer-alt text-white\" />\r\n                <span className=\"text-white\"> Dashboard</span>\r\n              </NavLink>\r\n            </li>\r\n\r\n            <hr className=\"m-2\" />\r\n\r\n            <div className=\"mobile-nav-color devider-desc\">TASK SECTION</div>\r\n            <li className=\"nav-item\">\r\n              <NavLink className=\"nav-link collapsed\" to=\"#\" data-toggle=\"collapse\" data-target=\"#collapseTwo\" aria-expanded=\"true\" aria-controls=\"collapseTwo\">\r\n                <i className=\"fas fa-fw fa-cog mobile-nav-color\" />\r\n                <span className=\"text-white\"> List Task</span>\r\n              </NavLink>\r\n              <div id=\"collapseTwo\" className=\"collapse\" aria-labelledby=\"headingTwo\">\r\n                <div className=\"bg-white py-2 collapse-inner rounded\">\r\n                  <NavLink className=\"menu-item text-dark\" to=\"#\">New Task</NavLink>\r\n                  <NavLink className=\"menu-item text-dark\" to=\"#\">Open Task</NavLink>\r\n                  <NavLink className=\"menu-item text-dark\" to=\"#\">Closed Task</NavLink>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n            <li className=\"nav-item\">\r\n              <NavLink className=\"nav-link collapsed\" to=\"#\" data-toggle=\"collapse\" data-target=\"#collapseUtilities\" aria-expanded=\"true\" aria-controls=\"collapseUtilities\">\r\n                <i className=\"fas fa-fw fa-wrench mobile-nav-color\" />\r\n                <span className=\"text-white\"> Todo List</span>\r\n              </NavLink>\r\n              <div id=\"collapseUtilities\" className=\"collapse\" aria-labelledby=\"headingUtilities\">\r\n                <div className=\"bg-white py-2 collapse-inner rounded\">\r\n                  <NavLink className=\"menu-item text-dark\" to=\"#\">New Todo</NavLink>\r\n                  <NavLink className=\"menu-item text-dark\" to=\"#\">Open Todo</NavLink>\r\n                  <NavLink className=\"menu-item text-dark\" to=\"#\">Close Todo</NavLink>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n            <hr className=\"m-2\" />\r\n\r\n            <div className=\"mobile-nav-color devider-desc\">PROJECTS SECTION</div>\r\n            <li className=\"nav-item\">\r\n              <NavLink className=\"nav-link collapsed\" to=\"#\" data-toggle=\"collapse\" data-target=\"#collapsePages\" aria-expanded=\"true\" aria-controls=\"collapsePages\">\r\n                <i className=\"fas fa-fw fa-folder mobile-nav-color\" />\r\n                <span className=\"text-white\"> Projects</span>\r\n              </NavLink>\r\n              <div id=\"collapsePages\" className=\"collapse\" aria-labelledby=\"headingPages\">\r\n                <div className=\"bg-white py-2 collapse-inner rounded\">\r\n                  <NavLink className=\"menu-item text-dark\" to=\"#\">Request</NavLink>\r\n                  <NavLink className=\"menu-item text-dark\" to=\"#\">In Progress</NavLink>\r\n                  <NavLink className=\"menu-item text-dark\" to=\"#\">Completed</NavLink>\r\n                  <NavLink className=\"menu-item text-dark\" to=\"#\">Canceled</NavLink>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n            <li className=\"nav-item\">\r\n              <NavLink className=\"nav-link\" to=\"#\">\r\n                <i className=\"fas fa-fw fa-chart-area mobile-nav-color\" />\r\n                <span className=\"text-white\"> Charts</span>\r\n              </NavLink>\r\n            </li>\r\n\r\n            <li className=\"nav-item\">\r\n              <NavLink className=\"nav-link\" to=\"#\">\r\n                <i className=\"fas fa-fw fa-table mobile-nav-color\" />\r\n                <span className=\"text-white\"> Tables</span>\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","C:\\Users\\IT09\\Music\\pms\\frontend\\src\\components\\Sidebar.jsx",[],[],"C:\\Users\\IT09\\Music\\pms\\frontend\\src\\components\\Loader.jsx",[],[],"C:\\Users\\IT09\\Music\\pms\\frontend\\src\\components\\Footer.jsx",[],[],"C:\\Users\\IT09\\Music\\pms\\frontend\\src\\components\\SidebarAdmin.jsx",[],[],"C:\\Users\\IT09\\Music\\pms\\frontend\\src\\components\\Logout.jsx",["271"],[],"import React from 'react';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { LogOut, reset } from \"../features/authSlice\";\r\n\r\nconst Logout = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const {user} = useSelector((state) => state.auth);\r\n\r\n  const logout = () => {\r\n    dispatch(LogOut());\r\n    dispatch(reset());\r\n    navigate(\"/\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"modal fade\" id=\"logoutModal\" tabIndex={-1} role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n      <div className=\"modal-dialog\" role=\"document\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <h5 className=\"modal-title\" id=\"exampleModalLabel\">Ready to Leave?</h5>\r\n            <button className=\"close\" type=\"button\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">×</span>\r\n            </button>\r\n          </div>\r\n          <div className=\"modal-body\">Select \"Logout\" below if you are ready to end your current session.</div>\r\n          <div className=\"modal-footer\">\r\n            <button className=\"btn btn-secondary\" type=\"button\" data-dismiss=\"modal\">Cancel</button>\r\n            <button className=\"btn btn-primary\" onClick={logout}>Logout</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Logout;\r\n","C:\\Users\\IT09\\Music\\pms\\frontend\\src\\components\\SubTask.jsx",["272"],[],"import React, { useState, useEffect } from 'react';\r\nimport axios from \"axios\";\r\n\r\nconst SubTask = (props) => {\r\n  const [subTask, setSubTask] = useState([]);\r\n  useEffect(() => {\r\n    getSubTask();\r\n  }, []);\r\n\r\n  const getSubTask = async () => {\r\n    const response = await axios.get(`${process.env.REACT_APP_API_URL}/subtasks/${props.taskid}`);\r\n    setSubTask(response.data);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ul className=\"list-group\">\r\n\r\n      {subTask.map((item, index) => (\r\n        <li key={index} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n          {item.subtask_name}\r\n          <span className=\"badge badge-primary badge-pill\">\r\n            {item.name?.split(\" \")[0]}\r\n          </span>\r\n        </li>\r\n      ))}\r\n\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SubTask;\r\n\r\n","C:\\Users\\IT09\\Music\\pms\\frontend\\src\\components\\Notification.jsx",[],[],"C:\\Users\\IT09\\Music\\pms\\frontend\\src\\pages\\TaskDetail.jsx",["273"],[],"import React, { useEffect } from 'react';\r\nimport Layout from './Layout';\r\nimport TaskDetails from '../components/TaskDetails';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { getMe } from \"../features/authSlice\";\r\n\r\nconst DetailTask = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const { isError, user} = useSelector((state) => state.auth);\r\n  let role = '';\r\n  if(user !== null){\r\n    role = user.role;\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(getMe());\r\n  }, [dispatch]);\r\n  \r\n  useEffect(() => {\r\n    if(isError) {\r\n      navigate(\"/\");\r\n    }\r\n  }, [isError, navigate]);\r\n\r\n  return (\r\n    <Layout\r\n      child = {<TaskDetails/>}\r\n      data = {user && user.role}\r\n    />\r\n  );\r\n}\r\n\r\nexport default DetailTask;\r\n","C:\\Users\\IT09\\Music\\pms\\frontend\\src\\components\\TaskDetails.jsx",["274","275","276","277","278"],[],"/**\r\n * @author Rido Martupa Simbolon\r\n */\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Link, useNavigate, useParams } from 'react-router-dom';\r\nimport axios from \"axios\";\r\nimport SubTask from './SubTask';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport '../css/project.css';\r\nimport '../css/dp.css';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst TaskDetails = () => {\r\n  const { taskid } = useParams(); \r\n  const [taskDetail, setTaskDetail] = useState([]);\r\n  const [taskName, setTaskName] = useState(\"\");\r\n  let uuid = '';\r\n  let userid = '';\r\n  let role = '';\r\n\r\n  const {user} = useSelector((state) => state.auth);\r\n  if(user !== null){\r\n    uuid = user.uuid;\r\n    role = user.role;\r\n    userid = user.id;\r\n  }\r\n\r\n  const getDetailTask = async() => {\r\n    try {\r\n      const response = await axios.get(`${process.env.REACT_APP_API_URL}/taskdetail/${taskid}`);\r\n      setTaskDetail(response.data);\r\n      setTaskName(response.data[0].task_name);\r\n    } catch (error) {\r\n      if (error.response) {\r\n        toast.error(<small>{error.response.data.msg}</small>, {\r\n          theme: \"colored\"\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getDetailTask();\r\n  }, []);\r\n\r\n  const updateTask = async(e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.patch(`${process.env.REACT_APP_API_URL}/taskupdate`, {\r\n        taskid: taskid,\r\n        task_name: taskName\r\n      });\r\n      if (response.status === 200) {\r\n        toast.success(<small>Task berhasil diupdate. Msg: {response.status} - {response.msg}</small>, {\r\n          theme: \"colored\"\r\n        });\r\n      } else {\r\n        toast.error(<small>Task gagal diupdate. Msg: {response.status} - {response.msg}</small>, {\r\n          theme: \"colored\"\r\n        });\r\n      }\r\n    } catch (error) {\r\n      toast.error(<small>{error.response.data.msg}</small>, {\r\n        theme: \"colored\"\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container-fluid mt-4\">\r\n        {/* Page Heading */}\r\n        <div className=\"d-sm-flex align-items-center justify-content-between mb-2\">\r\n          <h1 className=\"h3 mb-3 text-gray-800\">Task Details</h1>\r\n          <nav aria-label=\"breadcrumb\">\r\n            <ol className=\"breadcrumb\">\r\n              <li className=\"breadcrumb-item\"><a href=\"/dashboard\">Dashboard</a></li>\r\n              <li className=\"breadcrumb-item active\" aria-current=\"page\">Task Details</li>\r\n            </ol>\r\n          </nav>\r\n        </div>\r\n        <div className=\"card card-body\">\r\n          <div className=\"my-2\">\r\n            <form onSubmit={updateTask}>\r\n              <div className=\"form-group row\">\r\n                <label className=\"col-sm-2 col-form-label\">Task </label>\r\n                <div className=\"col-sm-10\">\r\n                  <input type=\"text\" className=\"form-control\" value={taskName} onChange={(e) => setTaskName(e.target.value)} />\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group row\">\r\n                <label className=\"col-sm-2 col-form-label\">Task PIC</label>\r\n                <div className=\"col-sm-10\">\r\n                  <input type=\"text\" className=\"form-control\" disabled value={taskDetail[0] && taskDetail[0].name } />\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group row\">\r\n                <label className=\"col-sm-2 col-form-label\">Sub Task</label>\r\n                <div className=\"col-sm-10\">\r\n                  <SubTask taskid={taskid} />\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group row\">\r\n                <label className=\"col-sm-2 col-form-label\">Action</label>\r\n                <div className=\"col-sm-10\">\r\n                  { \r\n                    role === 'admin' ?\r\n                    <>\r\n                      <button type=\"submit\" className=\"btn btn-primary shadow\">\r\n                        <i className=\"fa fa-pencil-square mr-2\"></i>\r\n                        Update Task \r\n                      </button>\r\n                    </>\r\n                    :\r\n                    <>\r\n                      <button type=\"submit\" className=\"btn btn-primary shadow\">\r\n                        <i className=\"fa fa-pencil-square mr-2\"></i>\r\n                        Update Task \r\n                      </button>\r\n                    </>\r\n                  }\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <ToastContainer icon={false} autoClose={3000}/>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TaskDetails;\r\n","C:\\Users\\IT09\\Music\\pms\\frontend\\src\\pages\\Convert.jsx",["279"],[],"import React, { useEffect } from 'react';\r\nimport ToolsLayout from './ToolsLayout';\r\nimport ConvertCSVToXLSX from '../components/tool/ConvertCSVToXLSX';\r\n\r\n\r\nconst Convert = () => {\r\n\r\n  return (\r\n    <ToolsLayout\r\n      child = {<ConvertCSVToXLSX/>}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Convert;\r\n","C:\\Users\\IT09\\Music\\pms\\frontend\\src\\components\\tool\\ConvertCSVToXLSX.jsx",["280"],[],"import React from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nconst ConvertCSVToXLSX = () => {\r\n\r\n  const convertXLSX = () => {\r\n    \r\n  }\r\n\r\n  return (\r\n    <div className=\"container-fluid mt-4\">\r\n      {/* Page Heading */}\r\n      <div className=\"d-sm-flex align-items-center justify-content-between mb-2\">\r\n        <h1 className=\"h3 mb-3 text-gray-800\">File Converter</h1>\r\n        <nav aria-label=\"breadcrumb\">\r\n          <ol className=\"breadcrumb\">\r\n            <li className=\"breadcrumb-item\"><a href=\"/dashboard\">Dashboard</a></li>\r\n          </ol>\r\n        </nav>\r\n      </div>\r\n      \r\n      <div className=\"card shadow mb-4\">\r\n        <div className=\"card-body\">\r\n          <form onSubmit={convertXLSX()}>\r\n            <div className=\"input-group\">\r\n              <input type=\"file\" className=\"form-control\" id=\"filecsv\" aria-describedby=\"converttoxlsx\" aria-label=\"Upload\" />\r\n              <button className=\"btn btn-outline-secondary\" type=\"submit\" id=\"converttoxlsx\">Convert to XLSX</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n\r\n      <ToastContainer icon={false} autoClose={3000}/>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ConvertCSVToXLSX;\r\n","C:\\Users\\IT09\\Music\\pms\\frontend\\src\\pages\\ToolsLayout.jsx",[],[],"C:\\Users\\IT09\\Music\\pms\\frontend\\src\\components\\tool\\ToolsSidebar.jsx",[],[],"C:\\Users\\IT09\\Music\\pms\\frontend\\src\\pages\\SearchProjects.jsx",["281"],[],"import React, { useEffect } from 'react';\r\nimport Layout from './Layout';\r\nimport ProjectSearch from '../components/ProjectSearch';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { getMe } from \"../features/authSlice\";\r\n\r\nconst SearchProjects = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const { isError, user} = useSelector((state) => state.auth);\r\n  let role = '';\r\n  if(user !== null){\r\n    role = user.role;\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(getMe());\r\n  }, [dispatch]);\r\n  \r\n  useEffect(() => {\r\n    if(isError) {\r\n      navigate(\"/\");\r\n    }\r\n  }, [isError, navigate]);\r\n\r\n  return (\r\n    <Layout\r\n      child = {<ProjectSearch />}\r\n      data = {user && user.role}\r\n    />\r\n  );\r\n}\r\n\r\nexport default SearchProjects;\r\n","C:\\Users\\IT09\\Music\\pms\\frontend\\src\\components\\ProjectSearch.jsx",["282","283","284","285"],[],"/**\r\n * @author Rido Martupa Simbolon\r\n */\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Link, NavLink, useParams } from 'react-router-dom';\r\nimport axios from \"axios\";\r\nimport Moment from 'moment';\r\nimport '../css/project.css';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst ProjectSearch = () => {\r\n  const [projects, setProjects] = useState([]);\r\n  const {user} = useSelector((state) => state.auth);\r\n  const { keyword } = useParams();  \r\n  let role = '';\r\n  let uid = '';\r\n  \r\n  if(user !== null){\r\n    role = user.role;\r\n    uid = user.id;\r\n  }\r\n\r\n  const searchProject = async () => {\r\n    try {\r\n      const response = await axios.post(`${process.env.REACT_APP_API_URL}/projects/search`, {\r\n        keyword: keyword\r\n      });\r\n      setProjects(response.data);\r\n      console.log(response.data);\r\n    } catch (error) {\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    searchProject();\r\n  }, [projects]);\r\n  \r\n  return (\r\n    <div className=\"container-fluid mt-4\">\r\n      <div className=\"card card-body\">\r\n        <div className=\"my-1\">\r\n          <Link to={'/projects/new'} className=\"d-sm-inline-block btn btn-sm btn-primary shadow-sm mb-3\"><i className=\"fas fa-plus-square fa-sm text-white-50\" /> Create New Project</Link>\r\n        </div>\r\n        <table className=\"table table-bordered\">\r\n          <thead>\r\n            <tr className=\"text-center\">\r\n              <th scope=\"col\">PID</th>\r\n              <th scope=\"col\">Project Name</th>\r\n              <th scope=\"col\">Participant</th>\r\n              <th scope=\"col\">Progress</th>\r\n\t\t\t  <th scope=\"col\">Periode</th>\r\n              <th scope=\"col\">Start Date</th>\r\n              <th scope=\"col\">Due Date</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n\r\n          {projects.map((project, index) => (\r\n            <tr key={index}>\r\n              <td className=\"text-center\">{project.projectid}</td>\r\n              <td className=\"text-bold\">\r\n                <Link className=\"text-lead toltip\" to={`/projects/detail/${project.projectid}`}>{project.projectname}\r\n                  <small className=\"tooltiptext\">click for detail task</small>\r\n                </Link>\r\n              </td>\r\n              <td className=\"text-center\" >\r\n                {JSON.parse(project.pic).data.map((item,idx) => {\r\n                  return ((idx+1) +'.'+ item.label + `\\n`)\r\n                })}\r\n              </td>\r\n              <td>\r\n                <div className=\"progress\">\r\n                  <div className=\"progress-bar bg-info\" role=\"progressbar\" style={{width: project.ttlbobot+'%'}} aria-valuenow={project.ttlbobot} aria-valuemin={0} aria-valuemax={100}>{project.ttlbobot}%</div>\r\n                </div>\r\n              </td>\r\n              <td className=\"text-center\">{Moment(project.startproj).format('YYYY')}</td>\r\n              <td className=\"text-center\">{Moment(project.startproj).format('DD-MM-YYYY')}</td>\r\n              <td className=\"text-center\">{Moment(project.endproj).format('DD-MM-YYYY')}</td>\r\n            </tr>\r\n          ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProjectSearch;\r\n",{"ruleId":"286","severity":1,"message":"287","line":5,"column":21,"nodeType":"288","messageId":"289","endLine":5,"endColumn":34},{"ruleId":"290","severity":1,"message":"291","line":32,"column":6,"nodeType":"292","endLine":32,"endColumn":8,"suggestions":"293"},{"ruleId":"294","severity":1,"message":"295","line":65,"column":57,"nodeType":"296","messageId":"297","endLine":65,"endColumn":59},{"ruleId":"298","severity":1,"message":"299","line":66,"column":30,"nodeType":"300","messageId":"301","endLine":66,"endColumn":32},{"ruleId":"290","severity":1,"message":"302","line":89,"column":5,"nodeType":"292","endLine":89,"endColumn":7,"suggestions":"303"},{"ruleId":"286","severity":1,"message":"304","line":23,"column":5,"nodeType":"288","messageId":"289","endLine":23,"endColumn":9},{"ruleId":"290","severity":1,"message":"305","line":51,"column":6,"nodeType":"292","endLine":51,"endColumn":18,"suggestions":"306"},{"ruleId":"286","severity":1,"message":"307","line":45,"column":10,"nodeType":"288","messageId":"289","endLine":45,"endColumn":17},{"ruleId":"286","severity":1,"message":"308","line":21,"column":5,"nodeType":"288","messageId":"289","endLine":21,"endColumn":9},{"ruleId":"290","severity":1,"message":"309","line":25,"column":9,"nodeType":"310","endLine":28,"endColumn":4},{"ruleId":"294","severity":1,"message":"295","line":68,"column":57,"nodeType":"296","messageId":"297","endLine":68,"endColumn":59},{"ruleId":"298","severity":1,"message":"299","line":69,"column":30,"nodeType":"300","messageId":"301","endLine":69,"endColumn":32},{"ruleId":"290","severity":1,"message":"311","line":106,"column":6,"nodeType":"292","endLine":106,"endColumn":8,"suggestions":"312"},{"ruleId":"286","severity":1,"message":"313","line":133,"column":9,"nodeType":"288","messageId":"289","endLine":133,"endColumn":17},{"ruleId":"298","severity":1,"message":"314","line":422,"column":96,"nodeType":"300","messageId":"301","endLine":422,"endColumn":98},{"ruleId":"298","severity":1,"message":"314","line":424,"column":65,"nodeType":"300","messageId":"301","endLine":424,"endColumn":67},{"ruleId":"298","severity":1,"message":"314","line":426,"column":84,"nodeType":"300","messageId":"301","endLine":426,"endColumn":86},{"ruleId":"298","severity":1,"message":"314","line":428,"column":65,"nodeType":"300","messageId":"301","endLine":428,"endColumn":67},{"ruleId":"298","severity":1,"message":"314","line":430,"column":95,"nodeType":"300","messageId":"301","endLine":430,"endColumn":97},{"ruleId":"298","severity":1,"message":"314","line":432,"column":65,"nodeType":"300","messageId":"301","endLine":432,"endColumn":67},{"ruleId":"298","severity":1,"message":"314","line":434,"column":96,"nodeType":"300","messageId":"301","endLine":434,"endColumn":98},{"ruleId":"298","severity":1,"message":"314","line":436,"column":65,"nodeType":"300","messageId":"301","endLine":436,"endColumn":67},{"ruleId":"286","severity":1,"message":"315","line":14,"column":9,"nodeType":"288","messageId":"289","endLine":14,"endColumn":17},{"ruleId":"286","severity":1,"message":"304","line":19,"column":5,"nodeType":"288","messageId":"289","endLine":19,"endColumn":9},{"ruleId":"290","severity":1,"message":"316","line":98,"column":6,"nodeType":"292","endLine":98,"endColumn":8,"suggestions":"317"},{"ruleId":"286","severity":1,"message":"318","line":20,"column":5,"nodeType":"288","messageId":"289","endLine":20,"endColumn":8},{"ruleId":"290","severity":1,"message":"291","line":32,"column":6,"nodeType":"292","endLine":32,"endColumn":8,"suggestions":"319"},{"ruleId":"286","severity":1,"message":"308","line":21,"column":5,"nodeType":"288","messageId":"289","endLine":21,"endColumn":9},{"ruleId":"286","severity":1,"message":"318","line":22,"column":5,"nodeType":"288","messageId":"289","endLine":22,"endColumn":8},{"ruleId":"290","severity":1,"message":"309","line":25,"column":9,"nodeType":"310","endLine":28,"endColumn":4},{"ruleId":"286","severity":1,"message":"320","line":1,"column":8,"nodeType":"288","messageId":"289","endLine":1,"endColumn":13},{"ruleId":"286","severity":1,"message":"321","line":2,"column":8,"nodeType":"288","messageId":"289","endLine":2,"endColumn":13},{"ruleId":"322","severity":1,"message":"323","line":91,"column":15,"nodeType":"324","endLine":91,"endColumn":97},{"ruleId":"286","severity":1,"message":"325","line":10,"column":10,"nodeType":"288","messageId":"289","endLine":10,"endColumn":14},{"ruleId":"290","severity":1,"message":"326","line":8,"column":6,"nodeType":"292","endLine":8,"endColumn":8,"suggestions":"327"},{"ruleId":"286","severity":1,"message":"308","line":14,"column":5,"nodeType":"288","messageId":"289","endLine":14,"endColumn":9},{"ruleId":"286","severity":1,"message":"328","line":6,"column":10,"nodeType":"288","messageId":"289","endLine":6,"endColumn":14},{"ruleId":"286","severity":1,"message":"329","line":6,"column":16,"nodeType":"288","messageId":"289","endLine":6,"endColumn":27},{"ruleId":"286","severity":1,"message":"304","line":25,"column":5,"nodeType":"288","messageId":"289","endLine":25,"endColumn":9},{"ruleId":"286","severity":1,"message":"330","line":27,"column":5,"nodeType":"288","messageId":"289","endLine":27,"endColumn":11},{"ruleId":"290","severity":1,"message":"331","line":46,"column":6,"nodeType":"292","endLine":46,"endColumn":8,"suggestions":"332"},{"ruleId":"286","severity":1,"message":"333","line":1,"column":17,"nodeType":"288","messageId":"289","endLine":1,"endColumn":26},{"ruleId":"286","severity":1,"message":"334","line":2,"column":26,"nodeType":"288","messageId":"289","endLine":2,"endColumn":31},{"ruleId":"286","severity":1,"message":"308","line":14,"column":5,"nodeType":"288","messageId":"289","endLine":14,"endColumn":9},{"ruleId":"286","severity":1,"message":"335","line":6,"column":16,"nodeType":"288","messageId":"289","endLine":6,"endColumn":23},{"ruleId":"286","severity":1,"message":"308","line":20,"column":5,"nodeType":"288","messageId":"289","endLine":20,"endColumn":9},{"ruleId":"286","severity":1,"message":"318","line":21,"column":5,"nodeType":"288","messageId":"289","endLine":21,"endColumn":8},{"ruleId":"290","severity":1,"message":"336","line":37,"column":6,"nodeType":"292","endLine":37,"endColumn":16,"suggestions":"337"},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getProjects'. Either include it or remove the dependency array.","ArrayExpression",["338"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'getNotif'. Either include it or remove the dependency array.",["339"],"'uuid' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getNewestTask'. Either include it or remove the dependency array.",["340"],"'pictask' is assigned a value but never used.","'role' is assigned a value but never used.","The 'getProjects' function makes the dependencies of useEffect Hook (at line 32) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'getProjects' in its own useCallback() Hook.","VariableDeclarator","React Hook useEffect has a missing dependency: 'getDetailProject'. Either include it or remove the dependency array.",["341"],"'response' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'navigate' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getAllTask'. Either include it or remove the dependency array.",["342"],"'uid' is assigned a value but never used.",["343"],"'React' is defined but never used.","'axios' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'user' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getSubTask'. Either include it or remove the dependency array.",["344"],"'Link' is defined but never used.","'useNavigate' is defined but never used.","'userid' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getDetailTask'. Either include it or remove the dependency array.",["345"],"'useEffect' is defined but never used.","'toast' is defined but never used.","'NavLink' is defined but never used.","React Hook useEffect has a missing dependency: 'searchProject'. Either include it or remove the dependency array.",["346"],{"desc":"347","fix":"348"},{"desc":"349","fix":"350"},{"desc":"351","fix":"352"},{"desc":"353","fix":"354"},{"desc":"355","fix":"356"},{"desc":"347","fix":"357"},{"desc":"358","fix":"359"},{"desc":"360","fix":"361"},{"desc":"362","fix":"363"},"Update the dependencies array to be: [getProjects]",{"range":"364","text":"365"},"Update the dependencies array to be: [getNotif]",{"range":"366","text":"367"},"Update the dependencies array to be: [getNewestTask, newestTask]",{"range":"368","text":"369"},"Update the dependencies array to be: [getDetailProject]",{"range":"370","text":"371"},"Update the dependencies array to be: [getAllTask]",{"range":"372","text":"373"},{"range":"374","text":"365"},"Update the dependencies array to be: [getSubTask]",{"range":"375","text":"376"},"Update the dependencies array to be: [getDetailTask]",{"range":"377","text":"378"},"Update the dependencies array to be: [projects, searchProject]",{"range":"379","text":"380"},[839,841],"[getProjects]",[2413,2415],"[getNotif]",[1637,1649],"[getNewestTask, newestTask]",[3043,3045],"[getDetailProject]",[2810,2812],"[getAllTask]",[847,849],[205,207],"[getSubTask]",[1272,1274],"[getDetailTask]",[915,925],"[projects, searchProject]"]