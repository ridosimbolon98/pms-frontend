{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst {\n  API_URL\n} = process.env.development.API_URL;\nconsole.log(API_URL);\nconst initialState = {\n  user: null,\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: \"\"\n};\nexport const LoginUser = createAsyncThunk(\"user/LoginUser\", async (user, thunkAPI) => {\n  try {\n    const response = await axios.post(API_URL, {\n      email: user.email,\n      password: user.password\n    });\n    return response.data;\n  } catch (error) {\n    if (error.response) {\n      const message = error.response.data.msg;\n      return thunkAPI.rejectWithValue(message);\n    }\n  }\n});\nexport const getMe = createAsyncThunk(\"user/getMe\", async (_, thunkAPI) => {\n  try {\n    const response = await axios.get(API_URL + '/me');\n    return response.data;\n  } catch (error) {\n    if (error.response) {\n      const message = error.response.data.msg;\n      return thunkAPI.rejectWithValue(message);\n    }\n  }\n});\nexport const LogOut = createAsyncThunk(\"user/LogOut\", async () => {\n  await axios.delete(API_URL + '/logout');\n});\nexport const authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    reset: state => initialState\n  },\n  extraReducers: builder => {\n    builder.addCase(LoginUser.pending, state => {\n      state.isLoading = true;\n    });\n    builder.addCase(LoginUser.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.user = action.payload;\n    });\n    builder.addCase(LoginUser.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n    }); // Get User Login\n\n    builder.addCase(getMe.pending, state => {\n      state.isLoading = true;\n    });\n    builder.addCase(getMe.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.user = action.payload;\n    });\n    builder.addCase(getMe.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n    });\n  }\n});\nexport const {\n  reset\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","API_URL","process","env","development","console","log","initialState","user","isError","isSuccess","isLoading","message","LoginUser","thunkAPI","response","post","email","password","data","error","msg","rejectWithValue","getMe","_","get","LogOut","delete","authSlice","name","reducers","reset","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","actions","reducer"],"sources":["C:/Users/IT09/Music/poject/frontend/src/features/authSlice.jsx"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\nconst { API_URL } = process.env.development.API_URL;\r\nconsole.log(API_URL);\r\n\r\nconst initialState = {\r\n    user: null,\r\n    isError: false,\r\n    isSuccess: false,\r\n    isLoading: false,\r\n    message: \"\"\r\n}\r\n\r\nexport const LoginUser = createAsyncThunk(\"user/LoginUser\", async(user, thunkAPI) => {\r\n    try {\r\n        const response = await axios.post(API_URL, {\r\n            email: user.email,\r\n            password: user.password\r\n        });\r\n        return response.data;\r\n    } catch (error) {\r\n        if(error.response){\r\n            const message = error.response.data.msg;\r\n            return thunkAPI.rejectWithValue(message);\r\n        }\r\n    }\r\n});\r\n\r\nexport const getMe = createAsyncThunk(\"user/getMe\", async(_, thunkAPI) => {\r\n    try {\r\n        const response = await axios.get(API_URL+'/me');\r\n        return response.data;\r\n    } catch (error) {\r\n        if(error.response){\r\n            const message = error.response.data.msg;\r\n            return thunkAPI.rejectWithValue(message);\r\n        }\r\n    }\r\n});\r\n\r\nexport const LogOut = createAsyncThunk(\"user/LogOut\", async() => {\r\n    await axios.delete(API_URL+'/logout');\r\n});\r\n\r\nexport const authSlice = createSlice({\r\n    name: \"auth\",\r\n    initialState,\r\n    reducers:{\r\n        reset: (state) => initialState\r\n    },\r\n    extraReducers:(builder) =>{\r\n        builder.addCase(LoginUser.pending, (state) =>{\r\n            state.isLoading = true;\r\n        });\r\n        builder.addCase(LoginUser.fulfilled, (state, action) =>{\r\n            state.isLoading = false;\r\n            state.isSuccess = true;\r\n            state.user = action.payload;\r\n        });\r\n        builder.addCase(LoginUser.rejected, (state, action) =>{\r\n            state.isLoading = false;\r\n            state.isError = true;\r\n            state.message = action.payload;\r\n        })\r\n\r\n        // Get User Login\r\n        builder.addCase(getMe.pending, (state) =>{\r\n            state.isLoading = true;\r\n        });\r\n        builder.addCase(getMe.fulfilled, (state, action) =>{\r\n            state.isLoading = false;\r\n            state.isSuccess = true;\r\n            state.user = action.payload;\r\n        });\r\n        builder.addCase(getMe.rejected, (state, action) =>{\r\n            state.isLoading = false;\r\n            state.isError = true;\r\n            state.message = action.payload;\r\n        })\r\n    }\r\n});\r\n\r\nexport const {reset} = authSlice.actions;\r\nexport default authSlice.reducer;"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,MAAM;EAAEC;AAAF,IAAcC,OAAO,CAACC,GAAR,CAAYC,WAAZ,CAAwBH,OAA5C;AACAI,OAAO,CAACC,GAAR,CAAYL,OAAZ;AAEA,MAAMM,YAAY,GAAG;EACjBC,IAAI,EAAE,IADW;EAEjBC,OAAO,EAAE,KAFQ;EAGjBC,SAAS,EAAE,KAHM;EAIjBC,SAAS,EAAE,KAJM;EAKjBC,OAAO,EAAE;AALQ,CAArB;AAQA,OAAO,MAAMC,SAAS,GAAGd,gBAAgB,CAAC,gBAAD,EAAmB,OAAMS,IAAN,EAAYM,QAAZ,KAAyB;EACjF,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACgB,IAAN,CAAWf,OAAX,EAAoB;MACvCgB,KAAK,EAAET,IAAI,CAACS,KAD2B;MAEvCC,QAAQ,EAAEV,IAAI,CAACU;IAFwB,CAApB,CAAvB;IAIA,OAAOH,QAAQ,CAACI,IAAhB;EACH,CAND,CAME,OAAOC,KAAP,EAAc;IACZ,IAAGA,KAAK,CAACL,QAAT,EAAkB;MACd,MAAMH,OAAO,GAAGQ,KAAK,CAACL,QAAN,CAAeI,IAAf,CAAoBE,GAApC;MACA,OAAOP,QAAQ,CAACQ,eAAT,CAAyBV,OAAzB,CAAP;IACH;EACJ;AACJ,CAbwC,CAAlC;AAeP,OAAO,MAAMW,KAAK,GAAGxB,gBAAgB,CAAC,YAAD,EAAe,OAAMyB,CAAN,EAASV,QAAT,KAAsB;EACtE,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACyB,GAAN,CAAUxB,OAAO,GAAC,KAAlB,CAAvB;IACA,OAAOc,QAAQ,CAACI,IAAhB;EACH,CAHD,CAGE,OAAOC,KAAP,EAAc;IACZ,IAAGA,KAAK,CAACL,QAAT,EAAkB;MACd,MAAMH,OAAO,GAAGQ,KAAK,CAACL,QAAN,CAAeI,IAAf,CAAoBE,GAApC;MACA,OAAOP,QAAQ,CAACQ,eAAT,CAAyBV,OAAzB,CAAP;IACH;EACJ;AACJ,CAVoC,CAA9B;AAYP,OAAO,MAAMc,MAAM,GAAG3B,gBAAgB,CAAC,aAAD,EAAgB,YAAW;EAC7D,MAAMC,KAAK,CAAC2B,MAAN,CAAa1B,OAAO,GAAC,SAArB,CAAN;AACH,CAFqC,CAA/B;AAIP,OAAO,MAAM2B,SAAS,GAAG9B,WAAW,CAAC;EACjC+B,IAAI,EAAE,MAD2B;EAEjCtB,YAFiC;EAGjCuB,QAAQ,EAAC;IACLC,KAAK,EAAGC,KAAD,IAAWzB;EADb,CAHwB;EAMjC0B,aAAa,EAAEC,OAAD,IAAY;IACtBA,OAAO,CAACC,OAAR,CAAgBtB,SAAS,CAACuB,OAA1B,EAAoCJ,KAAD,IAAU;MACzCA,KAAK,CAACrB,SAAN,GAAkB,IAAlB;IACH,CAFD;IAGAuB,OAAO,CAACC,OAAR,CAAgBtB,SAAS,CAACwB,SAA1B,EAAqC,CAACL,KAAD,EAAQM,MAAR,KAAkB;MACnDN,KAAK,CAACrB,SAAN,GAAkB,KAAlB;MACAqB,KAAK,CAACtB,SAAN,GAAkB,IAAlB;MACAsB,KAAK,CAACxB,IAAN,GAAa8B,MAAM,CAACC,OAApB;IACH,CAJD;IAKAL,OAAO,CAACC,OAAR,CAAgBtB,SAAS,CAAC2B,QAA1B,EAAoC,CAACR,KAAD,EAAQM,MAAR,KAAkB;MAClDN,KAAK,CAACrB,SAAN,GAAkB,KAAlB;MACAqB,KAAK,CAACvB,OAAN,GAAgB,IAAhB;MACAuB,KAAK,CAACpB,OAAN,GAAgB0B,MAAM,CAACC,OAAvB;IACH,CAJD,EATsB,CAetB;;IACAL,OAAO,CAACC,OAAR,CAAgBZ,KAAK,CAACa,OAAtB,EAAgCJ,KAAD,IAAU;MACrCA,KAAK,CAACrB,SAAN,GAAkB,IAAlB;IACH,CAFD;IAGAuB,OAAO,CAACC,OAAR,CAAgBZ,KAAK,CAACc,SAAtB,EAAiC,CAACL,KAAD,EAAQM,MAAR,KAAkB;MAC/CN,KAAK,CAACrB,SAAN,GAAkB,KAAlB;MACAqB,KAAK,CAACtB,SAAN,GAAkB,IAAlB;MACAsB,KAAK,CAACxB,IAAN,GAAa8B,MAAM,CAACC,OAApB;IACH,CAJD;IAKAL,OAAO,CAACC,OAAR,CAAgBZ,KAAK,CAACiB,QAAtB,EAAgC,CAACR,KAAD,EAAQM,MAAR,KAAkB;MAC9CN,KAAK,CAACrB,SAAN,GAAkB,KAAlB;MACAqB,KAAK,CAACvB,OAAN,GAAgB,IAAhB;MACAuB,KAAK,CAACpB,OAAN,GAAgB0B,MAAM,CAACC,OAAvB;IACH,CAJD;EAKH;AAnCgC,CAAD,CAA7B;AAsCP,OAAO,MAAM;EAACR;AAAD,IAAUH,SAAS,CAACa,OAA1B;AACP,eAAeb,SAAS,CAACc,OAAzB"},"metadata":{},"sourceType":"module"}